"           ██
"          ░░
"  ██    ██ ██ ██████████  ██████  █████
" ░██   ░██░██░░██░░██░░██░░██░░█ ██░░░██
" ░░██ ░██ ░██ ░██ ░██ ░██ ░██ ░ ░██  ░░
"  ░░████  ░██ ░██ ░██ ░██ ░██   ░██   ██
"   ░░██   ░██ ███ ░██ ░██░███   ░░█████
"    ░░    ░░ ░░░  ░░  ░░ ░░░     ░░░░░

scriptencoding utf-8
set noexrc
set secure
set shell=/bin/sh

" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if 1
    fun! ProfileStart()
        let profile_file = '/tmp/vim.'.getpid().'.profile.txt'
        echom "Profiling into" profile_file
        exec 'profile start '.profile_file
        profile! file **
        profile  func *
    endfun
    if get(g:, 'profile')
        call ProfileStart()
    endif
endif

if has('vim_starting') && has('reltime')
    let g:startuptime = reltime()
    augroup vimrc-startuptime
        autocmd! VimEnter * let g:startuptime = reltime(g:startuptime)
                    \ | redraw
                    \ | echomsg 'startuptime: ' . reltimestr(g:startuptime)
                    \ | let g:vim_is_started="on"
    augroup END
endif

if has('vim_starting')
    filetype off
    set nocompatible
    set runtimepath+=~/.vim/bundle/neobundle.vim/
    if !has("nvim")
        set runtimepath+=/usr/lib/python2.7/site-packages/powerline/bindings/vim
    endif
    set runtimepath+=~/.fzf
endif

if has('nvim')
    let g:python_interpreter='python2'
        let &rtp = expand('~/.vim/') . ','
    \        . expand('~/.vim/after/') . ',' . &rtp
    runtime! plugin/python_setup.vim
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
    let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
endif

let s:bundle_dir = expand('$HOME/.vim/bundle')
let s:neobundle_dir = s:bundle_dir . '/neobundle.vim'
let s:neobundle_repo = 'https://github.com/Shougo/neobundle.vim'
let g:neobundle#cache_file = expand('$HOME/.vim/neobundlecache')
let &runtimepath.=','.s:neobundle_dir
try
    call neobundle#begin(s:bundle_dir)
    catch /E117/ " neobundle not installed
        execute "silent !mkdir -p " .  s:neobundle_dir
        execute "silent !" . "git clone " s:neobundle_repo . " " . s:neobundle_dir
        NeoBundleInstall
    call neobundle#end()
    quit
endtry
if neobundle#load_cache()
    source ~/.vim/00-bundlelist.vim
    NeoBundleSaveCache
endif
call neobundle#end()
if (&t_Co > 2 || has("gui_running"))
    syntax on
endif
filetype plugin indent on

NeoBundleCheck

source ~/.vim/00-functions.vim
source ~/.vim/01-settings.vim
source ~/.vim/02-keymaps.vim
source ~/.vim/03-plugins-config.vim
source ~/.vim/04-autocmds.vim
source ~/.vim/11-vimacs.vim
source ~/.vim/21-langmap.vim
