*vimfiler.txt*	Powerful file explorer implemented by Vim script

Version: 3.1
Author : Shougo <Shougo.Matsu@gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*vimfiler-contents*

Introduction		|vimfiler-introduction|
Interface		|vimfiler-interface|
  Commands		  |vimfiler-commands|
  Functions		  |vimfiler-functions|
  Variables		  |vimfiler-variables|
    Sources variables	    |vimfiler-sources-variables|
  Key mappings		  |vimfiler-key-mappings|
Examples		|vimfiler-examples|
Unite sources		|vimfiler-unite-sources|
FAQ			|vimfiler-faq|
Changelog		|vimfiler-changelog|

==============================================================================
INTRODUCTION					*vimfiler-introduction*

*vimfiler* is a powerful file explorer(filer) written by Vim script.

==============================================================================
USAGE						*vimfiler-usage*

	To run vimfiler, execute this command.
>
	:VimFiler
<
	If you set |g:vimfiler_as_default_explorer| to 1, vimfiler behaves
	as default explorer like |netrw|.
>
	:let g:vimfiler_as_default_explorer = 1
<
vimfiler needs |unite|
http://github.com/Shougo/unite.vim

Please install unite.vim Ver.3.0(or later) before use vimfiler.

==============================================================================
INTERFACE					*vimfiler-interface*

------------------------------------------------------------------------------
COMMANDS 					*vimfiler-commands*

:VimFiler [{options}...] [[{source-name}:]{path}]
						*:VimFiler*
		Run vimfiler. This command reuses a buffer if a vimfiler
		buffer already exists. If you ommit {path}, vimfiler opens current
		directory. [[{source-name}:]{path}] arg is same as |:Unite|.
		But you ommit source name, "file" source will be used.
		If {path} is directory, browse in {path} directory files.
		If {path} is file, edit {path} file.

		Examples:
		"foo": the parameters of source file are
		                ["foo"].
		"ssh:bar:baz": the parameters of source ssh are
		                ["bar", "baz"].
>
		" File explorer like behavior.
		:VimFiler -buffer-name=explorer -split -simple -winwidth=35 -toggle -no-quit
<
						*vimfiler-options*
		{options} are options for a vimfiler buffer.  You may give the
		following parameters for a option; you must escape with \ when
		it contains spaces.

						*vimfiler-options-buffer-name*
		-buffer-name={buffer-name}
		Specifies a buffer name.
		The default buffer name is 'default'.
		Note: Buffer name must not contain spaces.

						*vimfiler-options-no-quit*
		-no-quit
		Doesn't close the vimfiler buffer after firing an action.

						*vimfiler-options-quit*
		-quit
		Close the vimfiler buffer after firing an action.

						*vimfiler-options-winwidth*
		-winwidth={window-width}
		Specifies the width of a vimfiler buffer.

						*vimfiler-options-winminwidth*
		-winminwidth={window-width}
		Specifies the minimum width of a vimfiler buffer.

						*vimfiler-options-direction*
		-direction={direction}
		Defines split position rule. The default value is same to
		|g:vimfiler_split_rule|.

						*unite-options-toggle*
		-toggle
		Close vimfiler buffer window if this vimfiler buffer name
		window is exists.

						*unite-options-simple*
		-simple
		Enable vimfiler simple mode.

						*unite-options-split*
		-split
		Split vimfiler buffer.

						*unite-options-horizontal*
		-horizontal
		Split horizontally.

						*unite-options-double*
		-double
		Open vimfiler buffers in double mode.

						*vimfiler-options-create*
		-create
		Create new vimfiler buffer.

						*unite-options-auto-cd*
		-auto-cd
		Enable auto cd behavior.
		If omit it, use |g:vimfiler_enable_auto_cd|.
		Note: This option works in file source.

:VimFilerCreate [{options}...] [{path}]		*:VimFilerCreate*
		Equivalent to |:VimFiler| except that it creates a new vimfiler
		buffer.

:VimFilerSimple [{options}...] [{path}]		*:VimFilerSimple*
		Equivalent to |:VimFiler| except that it creates a simple vimfiler
		buffer.

:VimFilerSplit [{options}...] [{path}]		*:VimFilerSplit*
		Equivalent to |:VimFiler| except that it creates a vimfiler buffer
		and split the window.

:VimFilerTab [{options}...] [{path}]		*:VimFilerTab*
		Equivalent to |:VimFiler| except that it creates a vimfiler buffer
		and create a tab.

:VimFilerDouble [{options}...] [{path}]		*:VimFilerDouble*
		Equivalent to |:VimFiler| except that it creates double vimfiler
		buffers.

:VimFilerCurrentDir [{options}...] [{path}]	*:VimFilerCurrentDir*
		Equivalent to |:VimFiler| except that it starts with current
		directory.

:VimFilerBufferDir [{options}...] [{path}]	*:VimFilerBufferDir*
		Equivalent to |:VimFiler| except that it starts with current
		buffer directory.

:VimFilerClose {buffer-name}			*:VimFilerClose*
		Close vimfiler buffer named {buffer-name}.

------------------------------------------------------------------------------
FUNCTIONS					*vimfiler-functions*

vimfiler#do_action({action-name})		*vimfiler#do_action()*
		Execute {action-name} action for the marked candidates.
		This causes a runtime error if {action-name} doesn't exist or
		the action is invalid.

		This is handy for defining a key mapping to run an action by
		yourself.

		This runs the default action when you specify "default" on
		{action-name}.

		This runs an action on the candidates of the current line or
		the top of the candidates when none of the candidates are marked.

		This is usually used as nnoremap <silent><buffer><expr>.
		For example,
>
		nnoremap <silent><buffer><expr> v vimfiler#do_action('vsplit')
>
vimfiler#smart_cursor_map({directory-map}, {file-map})
						*vimfiler#smart_cursor_map()*
		Returns the key sequence with respect to the given
		directory-map and file-map.  This will be used with
		nmap <buffer><expr> usually.
		Example:
>
		nmap <buffer><expr> e vimfiler#smart_cursor_map(
				\  "\<Plug>(vimfiler_cd_file)",
				\  "\<Plug>(vimfiler_edit_file)")

vimfiler#set_execute_file({exts}, {command})	*vimfiler#set_execute_file()*

------------------------------------------------------------------------------
VARIABLES 					*vimfiler-variables*

g:vimfiler_as_default_explorer			*g:vimfiler_as_default_explorer*
		If this variable is true, Vim use vimfiler as file manager
		instead of |netrw|. Note: This variable disables |netrw|
		explorer function.
		
		Default value is 0.

g:vimfiler_execute_file_list			*g:vimfiler_execute_file_list*
		This variable controls vimfiler execute.
		The key is extension. The value is command name or
		command name list. If value is "vim", edit file.

g:vimfiler_extensions				*g:vimfiler_extensions*
		This variable controls vimfiler color syntax.
		The key is "text", "image", "archive", "system", "multimedia".
		The value is extensions.

		Default value is complicated, please refer to
		autoload/vimfiler.vim.

g:vimfiler_split_action				*g:vimfiler_split_action*
		This variable controls vimfiler split action in |unite|.
		
		Default value is "right".

g:vimfiler_edit_action				*g:vimfiler_edit_action*
		This variable controls vimfiler edit action in |unite|.
		
		Default value is "open".

g:vimfiler_preview_action			*g:vimfiler_preview_action*
		This variable controls vimfiler preview action in |unite|.
		
		Default value is "preview".

g:vimfiler_min_filename_width			*g:vimfiler_min_filename_width*
		This variable controls vimfiler displays min filename width.
		If filename range is shorter than it, vimfiler force use simple
		interface.
		
		Default value is 30.

g:vimfiler_max_filename_width			*g:vimfiler_max_filename_width*
		This variable controls vimfiler displays max filename width.
		
		Default value is 120.

g:vimfiler_sort_type				*g:vimfiler_sort_type*
		This variable controls default vimfiler sort type.
		
		Default value is "filename".

g:vimfiler_directory_display_top		*g:vimfiler_directory_display_top*
		This variable controls vimfiler sorts directories as top.
		
		Default value is 1.

g:vimfiler_split_rule				*g:vimfiler_split_rule*
		Defines split position rule.

		Default value is "topleft".

g:vimfiler_detect_drives			*g:vimfiler_detect_drives*
		This variable controls vimfiler uses drives
		 when |<Plug>(vimfiler_switch_to_drive)|.
		
		Default value is refer to plugin/vimfiler.vim.

g:vimfiler_safe_mode_by_default			*g:vimfiler_safe_mode_by_default*
		This variable controls vimfiler enter safe mode by default. In
		safe mode, dangerous command is disabled.
		
		Default value is 1.

g:vimfiler_time_format				*g:vimfiler_time_format*
		This variable controls displayed time format.
		The time format option is compatible |strftime()|.
		
		Default value is "%y/%m/%d %H:%M".

g:vimfiler_max_directories_history		*g:vimfiler_max_directories_history*
		This variable controls max directories history.
		
		Default value is 50.

g:vimfiler_tree_leaf_icon			*g:vimfiler_tree_leaf_icon*
		This variable controls vimfiler tree leaf icon.
		
		Default value is "|"

g:vimfiler_tree_opened_icon			*g:vimfiler_tree_opened_icon*
		This variable controls vimfiler opened directory tree icon.
		
		Default value is "-"

g:vimfiler_tree_closed_icon			*g:vimfiler_tree_closed_icon*
		This variable controls vimfiler closed directory tree icon.
		
		Default value is "+"

g:vimfiler_file_icon			*g:vimfiler_file_icon*
		This variable controls vimfiler file icon.
		
		Default value is "-"

g:vimfiler_marked_file_icon		*g:vimfiler_marked_file_icon*
		This variable controls vimfiler marked file icon.
		
		Default value is "*"

g:vimfiler_data_directory			*g:vimfiler_data_directory*
		Specifies directories for configurations internally used in
		vimfiler itself or its sources.  If the directory doesn't exist
		the directory will be automatically generated.
		
		Default value is expand('~/.vimfiler'); the absolute path of it.

g:vimfiler_enable_auto_cd			*g:vimfiler_enable_auto_cd*
		This variable controls whether vimfiler change Vim current
		directory using |g:unite_kind_openable_lcd_command|
		automatically.
		Note: This variable works in file source.
		
		Default value is 0

SOURCES VARIABLES 				*vimfiler-sources-variables*

g:unite_kind_file_delete_file_command		*g:unite_kind_file_delete_file_command*
g:unite_kind_file_delete_directory_command	*g:unite_kind_file_delete_directory_command*
		This variable controls vimfiler (and kind file) use delete
		command.
		
		This variable substitute special arguments:
		$srcs : src files
		$dest : destination directory
		
		Default value is refer to autoload/unite/kinds/file.vim.

g:unite_kind_file_copy_file_command		*g:unite_kind_file_copy_file_command*
		This variable controls vimfiler (and kind file) use copy
		files command.
		If variable is empty, this system can't support copy file.
		
		This variable substitute special arguments:
		$srcs : src files
		$dest : destination directory
		
		Default value is refer to autoload/unite/kinds/file.vim.

g:unite_kind_file_copy_directory_command	*g:unite_kind_file_copy_directory_command*
		This variable controls vimfiler (and kind file) use copy
		directories command.
		If variable is empty, this system can't support copy directories.
		
		This variable substitute special arguments:
		$srcs : src files
		$dest : destination directory
		
		Default value is refer to autoload/unite/kinds/file.vim.

g:unite_kind_file_switch_command			*g:unite_kind_file_switch_command*
		This variable controls vimfiler (and kind file) use switch
		files command.
		
		This variable substitute special arguments:
		$srcs : src files
		$dest : destination directory
		
		Default value is refer to autoload/unite/kinds/file.vim.

g:unite_kind_file_use_trashbox			*g:unite_kind_file_use_trashbox*
		This variable controls vimfiler (and kind file) use trashbox
		when delete files.
		Note: This option is works newest vimproc and in Windows only.

------------------------------------------------------------------------------
KEY MAPPINGS 					*vimfiler-key-mappings*

Normal mode key mappings.

<Plug>(vimfiler_switch_to_other_window)		*<Plug>(vimfiler_switch_to_other_window)*
		Switch to other vimfiler window.

<Plug>(vimfiler_loop_cursor_down)		*<Plug>(vimfiler_loop_cursor_down)*
		Switch to next line with loop.

<Plug>(vimfiler_loop_cursor_up)			*<Plug>(vimfiler_loop_cursor_up)*
		Switch to previous line with loop.

<Plug>(vimfiler_cursor_top)			*<Plug>(vimfiler_cursor_top)*
		Moves the cursor to the top of the vimfiler.

<Plug>(vimfiler_redraw_screen)			*<Plug>(vimfiler_redraw_screen)*
		Redraw vimfiler screen.

<Plug>(vimfiler_toggle_mark_current_line)	*<Plug>(vimfiler_toggle_mark_current_line)*
		Toggle mark in cursor line and move down.

<Plug>(vimfiler_toggle_mark_current_line_up)	*<Plug>(vimfiler_toggle_mark_current_line_up)*
		Toggle mark in cursor line and move up.

<Plug>(vimfiler_toggle_mark_all_lines)		*<Plug>(vimfiler_toggle_mark_all_lines)*
		Toggle marks in all lines.

<Plug>(vimfiler_clear_mark_all_lines)		*<Plug>(vimfiler_clear_mark_all_lines)*
		Clear marks in all lines.

<Plug>(vimfiler_copy_file)			*<Plug>(vimfiler_copy_file)*
		Copy marked files to destination directory. If exists another
		vimfiler buffer, destination directory is another vimfiler
		directory.
		If no marked files, mark current file.

<Plug>(vimfiler_move_file)			*<Plug>(vimfiler_move_file)*
		Move marked files to destination directory. If exists another
		vimfiler buffer, destination directory is another vimfiler
		directory.
		If no marked files, mark current file.
		This mappings is disabled in vimfiler safe mode.

<Plug>(vimfiler_delete_file)			*<Plug>(vimfiler_delete_file)*
		Delete marked files completely.
		If no marked files, mark current file.
		This mappings is disabled in vimfiler safe mode.

<Plug>(vimfiler_make_directory)			*<Plug>(vimfiler_make_directory)*
		Create new directory. If directory tree is opened, create new
		directory in directory tree.
		This mappings is disabled in vimfiler safe mode.

<Plug>(vimfiler_new_file)			*<Plug>(vimfiler_new_file)*
		Create new files. If directory tree is opened, create new
		files in directory tree.
		This mappings is disabled in vimfiler safe mode.

<Plug>(vimfiler_rename_file)			*<Plug>(vimfiler_rename_file)*
		Rename cursor file or selected files.
		If selected files, vimfiler will open exrename buffer.
		In exrename buffer, you can rename with Vim features like
		|renamer.vim|.
		http://www.vim.org/scripts/script.php?script_id=1721
		This mappings is disabled in vimfiler safe mode.

<Plug>(vimfiler_execute)			*<Plug>(vimfiler_execute)*
		Execute cursor file with |g:vimfiler_execute_file_list| command.
		If cursor file is directory, change directory.

<Plug>(vimfiler_execute_system_associated)	*<Plug>(vimfiler_execute_system_associated)*
<Plug>(vimfiler_execute_file)			*<Plug>(vimfiler_execute_file)*
		Execute cursor file by system associated command.
		Note: <Plug>(vimfiler_execute_file) is obsolute name.

<Plug>(vimfiler_execute_vimfiler_associated)	*<Plug>(vimfiler_execute_vimfiler_associated)*
		Execute cursor file by vimfiler associated command.
		Refer to |g:vimfiler_execute_file_list|.

<Plug>(vimfiler_switch_to_parent_directory)	*<Plug>(vimfiler_switch_to_parent_directory)*
		Switch to parent directory.

<Plug>(vimfiler_switch_to_drive)			*<Plug>(vimfiler_switch_to_drive)*
		Switch to other drive(Windows) or mount point(Mac/Linux) by
		|unite| interface.

<Plug>(vimfiler_switch_to_home_directory)		*<Plug>(vimfiler_switch_to_home_directory)*
		Switch to home directory.

<Plug>(vimfiler_switch_to_root_directory)		*<Plug>(vimfiler_switch_to_root_directory)*
		Switch to root directory.

<Plug>(vimfiler_switch_to_history_directory)	*<Plug>(vimfiler_switch_to_history_directory)*
		Switch to history directory by |unite| interface.

<Plug>(vimfiler_toggle_visible_dot_files)	*<Plug>(vimfiler_toggle_visible_dot_files)*
		Toggle visible dot files.

<Plug>(vimfiler_popup_shell)			*<Plug>(vimfiler_popup_shell)*
		Execute |:VimShellPop|or |:shell|.

<Plug>(vimfiler_edit_file)			*<Plug>(vimfiler_edit_file)*
		Edit cursor file. This mapping use |g:vimfiler_edit_action|.

<Plug>(vimfiler_split_edit_file)		*<Plug>(vimfiler_split_edit_file)*
		Split buffer and edit cursor file. This mapping use
		|g:vimfiler_edit_action|.

<Plug>(vimfiler_edit_binary_file)		*<Plug>(vimfiler_edit_binary_file)*
		Edit binary file by |vinarise|.

<Plug>(vimfiler_execute_external_filer)		*<Plug>(vimfiler_execute_external_filer)*
		Open current directory by external filer(Explorer, Nautilus,
		...).

<Plug>(vimfiler_execute_shell_command)		*<Plug>(vimfiler_execute_shell_command)*
		Execute shell command by |vimproc#system()| or |system()|.
		If the argument is "?", substitute one file.
		If the argument is "*", substitute the selected files.
		Otherwise, append one file to the last argument.
		
		Example:
		You selected files "foo", "bar", "baz".
		(Input)   "echo"
		(Command) "echo foo; echo bar; echo baz"
		
		(Input)   "echo ? hoge"
		(Command) "echo foo hoge; echo bar hoge; echo baz hoge"
		
		(Input) "echo *"
		(Command) "echo foo bar baz"

<Plug>(vimfiler_hide)				*<Plug>(vimfiler_hide)*
		Hide current vimfiler.

<Plug>(vimfiler_exit)				*<Plug>(vimfiler_exit)*
		Exit current vimfiler.

<Plug>(vimfiler_help)				*<Plug>(vimfiler_help)*
		Mappings help by |unite| interface.

<Plug>(vimfiler_preview_file)			*<Plug>(vimfiler_preview_file)*
		Preview current file. This mapping use
		|g:vimfiler_preview_action|.

<Plug>(vimfiler_sync_with_current_vimfiler)	*<Plug>(vimfiler_sync_with_current_vimfiler)*
		Synchronize another vimfiler current directory with current
		vimfiler.

<Plug>(vimfiler_sync_with_another_vimfiler)	*<Plug>(vimfiler_sync_with_another_vimfiler)*
		Synchronize current directory with another vimfiler.

<Plug>(vimfiler_open_file_in_another_vimfiler)	*<Plug>(vimfiler_open_file_in_another_vimfiler)*
		Open cursor file or marked files in another vimfile. If the
		file is directory, change directory in another vimfiler.

<Plug>(vimfiler_print_filename)			*<Plug>(vimfiler_print_filename)*
		Print whole filename in echo area.

<Plug>(vimfiler_toggle_maximize_window)		*<Plug>(vimfiler_toggle_maximize_window)*
		Toggle maximize window in current vimfiler.

<Plug>(vimfiler_yank_full_path)			*<Plug>(vimfiler_yank_full_path)*
		Yank full path to clipboard register and unnamed register.

<Plug>(vimfiler_set_current_mask)		*<Plug>(vimfiler_set_current_mask)*
		Set current file mask by |unite| interface.

<Plug>(vimfiler_grep)				*<Plug>(vimfiler_grep)*
		Grep word in selected files or all current files by |unite|
		interface.

<Plug>(vimfiler_find)				*<Plug>(vimfiler_find)*
		Find from current directory by |unite| interface. Command line
		format is refer to find command.
		Note: Windows "find" command is not supported.
		Please install UNIX Tools find for Windows.

<Plug>(vimfiler_select_sort_type)		*<Plug>(vimfiler_select_sort_type)*
		Select current vimfiler sort type by |unite| interface.
		If you selected "save", save current sort type.
		If you selected "nosave", no save current sort type.

<Plug>(vimfiler_switch_vim_buffer_mode)		*<Plug>(vimfiler_switch_vim_buffer_mode)*
		Switch to vimfiler buffer mode. All vimfiler mappings is
		disabled. If press <ESC>, settings will be restored.

<Plug>(vimfiler_cd_vim_current_dir)		*<Plug>(vimfiler_cd_vim_current_dir)*
<Plug>(vimfiler_cd)				*<Plug>(vimfiler_cd)*
		Change system current directory to vimfiler current directory
		using |g:unite_kind_openable_lcd_command|.
		Note: |<Plug>(vimfiler_cd)| is obsolute name.

<Plug>(vimfiler_cd_file)			*<Plug>(vimfiler_cd_file)*
		Change vimfiler current directory.

<Plug>(vimfiler_choose_action)			*<Plug>(vimfiler_choose_action)*
		Choose |unite| action in selected files.

<Plug>(vimfiler_smart_h)			*<Plug>(vimfiler_smart_h)*
		Switch to parent directory or normal! "h".

<Plug>(vimfiler_smart_l)			*<Plug>(vimfiler_smart_l)*
		Execute cursor file or normal! "l".

<Plug>(vimfiler_toggle_safe_mode)		*<Plug>(vimfiler_toggle_safe_mode)*
		Toggle safe mode. In safe mode, dangerous command is disabled.

<Plug>(vimfiler_toggle_simple_mode)		*<Plug>(vimfiler_toggle_simple_mode)*
		Toggle simple mode. In simple mode, dispayed information is simple.

<Plug>(vimfiler_pushd)				*<Plug>(vimfiler_pushd)*
		Push current directory(and another vimfiler current directory)
		to directory stack.

<Plug>(vimfiler_popd)				*<Plug>(vimfiler_popd)*
		Pop current directory(and another vimfiler current directory)
		from directory stack.

<Plug>(vimfiler_expand_tree)			*<Plug>(vimfiler_expand_tree)*
		Expand/Unexpand directory tree.

<Plug>(vimfiler_expand_tree_recursive)		*<Plug>(vimfiler_expand_tree_recursive)*
		Expand/Close directory tree.

Visual mode key mappings.

<Plug>(vimfiler_toggle_mark_selected_lines)	*<Plug>(vimfiler_toggle_selected_lines)*
		Toggle marks in selected lines.

						*g:vimfiler_default_key_mappings*
Following keymappings are default keymappings.

Normal mode default mappings.
{lhs}			{rhs}
--------		-----------------------------
<TAB>			<Plug>(vimfiler_switch_to_other_window)
j			<Plug>(vimfiler_loop_cursor_down)
k			<Plug>(vimfiler_loop_cursor_up)
gg			<Plug>(vimfiler_cursor_top)
<C-l>			<Plug>(vimfiler_redraw_screen)
<Space>			<Plug>(vimfiler_toggle_mark_current_line)
<S-Space>		<Plug>(vimfiler_toggle_mark_current_line_up)
*			<Plug>(vimfiler_toggle_mark_all_lines)
U			<Plug>(vimfiler_clear_mark_all_lines)
c			<Plug>(vimfiler_copy_file)
m			<Plug>(vimfiler_move_file)
d			<Plug>(vimfiler_delete_file)
r			<Plug>(vimfiler_rename_file)
K			<Plug>(vimfiler_make_directory)
N			<Plug>(vimfiler_new_file)
<Enter>			<Plug>(vimfiler_execute)
l			<Plug>(vimfiler_smart_l)
x			<Plug>(vimfiler_execute_system_associated)
<2-LeftMouse>		<Plug>(vimfiler_execute_system_associated)
h			<Plug>(vimfiler_smart_h)
L			<Plug>(vimfiler_switch_to_drive)
~			<Plug>(vimfiler_switch_to_home_directory)
\			<Plug>(vimfiler_switch_to_root_directory)
<C-j>			<Plug>(vimfiler_switch_to_history_directory)
.			<Plug>(vimfiler_toggle_visible_dot_files)
H			<Plug>(vimfiler_popup_shell)
e			<Plug>(vimfiler_edit_file)
E			<Plug>(vimfiler_split_edit_file)
B			<Plug>(vimfiler_edit_binary_file)
ge			<Plug>(vimfiler_execute_external_filer)
<RightMouse>		<Plug>(vimfiler_execute_external_filer)
!			<Plug>(vimfiler_execute_shell_command)
q			<Plug>(vimfiler_hide)
Q			<Plug>(vimfiler_exit)
?			<Plug>(vimfiler_help)
v			<Plug>(vimfiler_preview_file)
o			<Plug>(vimfiler_sync_with_current_vimfiler)
O			<Plug>(vimfiler_open_file_in_another_vimfiler)
<C-g>			<Plug>(vimfiler_print_filename)
g<C-g>			<Plug>(vimfiler_toggle_maximize_window)
yy			<Plug>(vimfiler_yank_full_path)
M			<Plug>(vimfiler_set_current_mask)
gr			<Plug>(vimfiler_grep)
gf			<Plug>(vimfiler_find)
S			<Plug>(vimfiler_select_sort_type)
<C-v>			<Plug>(vimfiler_switch_vim_buffer_mode)
gc			<Plug>(vimfiler_cd_vim_current_dir)
gs			<Plug>(vimfiler_toggle_safe_mode)
gS			<Plug>(vimfiler_toggle_simple_mode)
a			<Plug>(vimfiler_choose_action)
Y			<Plug>(vimfiler_pushd)
P			<Plug>(vimfiler_popd)
t			<Plug>(vimfiler_expand_tree)
T			<Plug>(vimfiler_expand_tree_recursive)

Visual mode mappings.
{lhs}			{rhs}
--------		-----------------------------
<Space>			<Plug>(vimfiler_toggle_mark_selected_lines)

==============================================================================
EXAMPLES					*vimfiler-examples*
>
	call vimfiler#set_execute_file('vim', 'vim')
	call vimfiler#set_execute_file('txt', 'notepad')
	call vimfiler#set_execute_file('c', ['vim', 'notepad'])
	
	" Edit file by tabedit.
	"let g:vimfiler_edit_action = 'tabopen'
	
	let g:vimfiler_as_default_explorer = 1
	
	" Enable file operation commands.
	"let g:vimfiler_safe_mode_by_default = 0
	
	" Like Textmate icons.
	let g:vimfiler_tree_leaf_icon = ' '
	let g:vimfiler_tree_opened_icon = '▾'
	let g:vimfiler_tree_closed_icon = '▸'
	let g:vimfiler_file_icon = '-'
	let g:vimfiler_marked_file_icon = '*'

	" Use trashbox.
	" Windows only and require latest vimproc.
	"let g:unite_kind_file_use_trashbox = 1
<
==============================================================================
UNITE SOURCES					*vimfiler-unite-sources*

Here let me explain about a source for |unite| provided in vimfiler.

						*vimfiler-unite-source-vimfiler-history*
vimfiler/history
		Candidates of vimfiler history.

						*vimfiler-unite-source-vimfiler-drive*
vimfiler/drive
		Candidates of vimfiler drives.

						*vimfiler-unite-source-vimfiler-sort*
vimfiler/sort
		Candidates of vimfiler sort method.

						*vimfiler-unite-source-vimfiler-mask*
vimfiler/mask
		Change current vimfiler file mask.

						*vimfiler-unite-source-vimfiler-mapping*
vimfiler/mapping
		Candidates of vimfiler mappings.

						*vimfiler-unite-source-vimfiler-execute*
vimfiler/execute
		Candidates from |g:vimfiler_execute_file_list|.

						*vimfiler-unite-source-vimfiler-popd*
vimfiler/popd
		Candidates from vimfiler directory stack.

Actions of source original.

vimfiler/history				*vimfiler-unite-action-vimfiler-history*
	delete		Delete history

vimfiler/sort					*vimfiler-unite-action-vimfiler-sort*
	sort		Set sort type

vimfiler/mask					*vimfiler-unite-action-vimfiler-mask*
	change		Change vimfiler mask

vimfiler/popd					*vimfiler-unite-action-vimfiler-popd*
	delete		Delete directory from directory stack

==============================================================================
FAQ						*vimfiler-faq*

Like NERDTree FAQ(https://github.com/scrooloose/nerdtree).

To open a vimfiler tree automatically when Vim starts up(VimEnter autocmd
event):
>
	autocmd VimEnter * VimFiler -buffer-name=explorer -split -simple -winwidth=35 -toggle -no-quit
<
To open a vimfiler buffer automatically when Vim starts up if no
files(arguments) were specified:
>
	autocmd VimEnter * if !argc() | VimFiler | endif
<
To close Vim if the only window left open is a vimfiler buffer(But I don't
recommend):
>
	autocmd BufEnter * if (winnr('$') == 1 && &filetype ==# 'vimfiler') | q | endif
<
You must use // path to open UNC path in Windows:
Note: "\\" path is not supported.
>
	VimFiler //{path}/
	VimFiler //foo/bar/
	VimFiler //hoge/piyo/hogera.txt

==============================================================================
CHANGELOG					*vimfiler-changelog*

2012-05-31
- Fixed completion.

2012-05-29
- Fixed find action error.

2012-05-28
- Improved documentation.

2012-05-25
- Fixed vimfiler mapping.

2012-05-24
- Fixed autocmd bug in g:vimfiler_as_default_explorer.

2012-05-22
- Fixed debug message.
- Fixed for visualbell.

2012-05-17
- Fixed auto detection error.

2012-05-16
- Fixed g:unite_kind_openable_lcd_command error.
- Fixed grep error.

2012-05-12
- Fixed search vimfiler error.

2012-05-02
- Added -quit option.

2012-04-28
- Updated vital.

2012-04-19
- Fixed tag error.

2012-04-16
- Added FAQ section.

2012-04-10
- Fixed browse check.
- Improved sudo check.
- Fixed choose action error.

2012-03-31
- Fixed for cmdwin.
- Fixed variables initialization.

2012-03-26
- Fixed edit binary file.

2012-03-20
- Fixed expand().

2012-03-15
- Fixed expand().

2012-03-07
- Updated vital.

2012-03-06
- Fixed create vimfiler buffer behavior.

2012-03-05
- Improved version check.

2012-03-03
- Improved new file behavior.
- Improved alternate buffer.

2012-02-25
- Fixed redraw problem.

2012-02-20
- Fixed vimfiler create buffer.

2012-02-14
- Improved helper functions.

2012-02-13
- Fixed exrename.

2012-02-12
- Refactored initialize context.

2012-02-11
- Fixed check buflisted.
- Refactored is_windows.

2012-02-10
- Fixed <Plug>(vimfiler_cd_vim_current_dir).
- Added -horizontal option.
- Fixed default explorer problem.
- Fixed handler.
- Added g:vimfiler_enable_auto_cd option.

2012-02-01
- Improved g:vimfiler_detect_drives initialize timing.

2012-01-31
- Fixed search buffer name.

2012-01-26
- Fixed winfixwidth problem.

2012-01-24
- Improved vimfiler check.
- Fixed split automatically.

2012-01-23
- Fixed switch_to_other_window error.
- Improved split edit file.
- Fixed write problem.

2012-01-22
- set fileencoding.

2012-01-20
- Fixed exrename problem.
- Improved exrename behavior.

2012-01-18
- Fixed winwidth problem.

2012-01-17
- Improved documentation.
- Fixed for Windows UNC path(mattn).

2012-01-16
- Fixed vimfiler event error.
- Fixed neocomplcache depends.

2012-01-15
- Fixed documentation.
- Fixed redraw.
- Fixed parse path.
- Fixed alternate buffer.
- Improved exrename highlight.

2012-01-14
- Improved prompt.
- Fixed buffer_name bug.
- Improved switch to other window behavior.
- Improved vimfiler syntax.
- Fixed vimfiler resize problem.
- Fixed switch vimfiler.
- Changed g:vimfiler_min_filename_width behavior.
- Added <Plug>(vimfiler_toggle_maximize_window) mapping.
- Changed g:vimfiler_max_filename_width default value.
- Fixed set_current_vimfiler_bug.

2012-01-12
- Improved make_directory action.
- Improved redraw.
- Fixed expand tree problem.

2012-01-06
- Fixed write action.
- Fixed vimfiler switch.

2012-01-05
- Fixed -toggle option.

2012-01-01
- Added g:unite_kind_file_use_trashbox option.

2011-12-30
- Fixed documentation.
- Added <Plug>(vimfiler_yank_full_path) mapping.
- Added <Plug>(vimfiler_open_file_in_another_vimfiler) mapping.
- Improved redraw tree.
- Fixed restore cursor bug.
- Improved cursor position.
- Improved redraw behavior.

2011-12-29
- Improved make directory and new file actions.
- Fixed buflisted problem.
- Improved vimfiler#get_marked_files() behavior.

2011-12-27
- Changed g:vimfiler_split_action default value.
- Improved hide behavior.
- Improved redraw behavior.
- Added icon options.
- set winfixwidth.

2011-12-26
- Fixed exrename syntax error.
- Improved hide behavior.
- Added VimFilerBufferDir command.
- Fixed for :VimFilerDouble error.

2011-12-25
- Improved <Plug>(vimfiler_split_edit_file) behavior.

2011-12-24
- Split automatically.
- Improved <Plug>(vimfiler_split_edit_file) behavior.
- Fixed winwidth problem.
- Improved redraw.

2011-12-19
- Added -winminwidth option.

2011-12-18
- Improved for conceal.

2011-12-17
- Fixed cd bug in Windows.
- Fixed toggle vimfiler bug.
- Improved redraw screen.

2011-12-16
- Added VimFilerCurrentDir command.
- Fixed completion error.
- Improved display.
- Fixed cd behavior.

2011-12-15
- Fixed cd error.
- Improved parse path.

2011-12-14
- Improved datemark.
- Improved winwidth.
- Changed vimfiler interface.

2011-12-13
- Improved execute shellcmd behavior.
- Improved cd.

2011-12-12
- Improved <Plug>(vimfiler_execute_shell_command) documentation.

2011-12-08
- Added <Plug>(vimfiler_toggle_mark_current_line_up) mapping.
- Added some mappings.
- Added vimfiler#smart_cursor_map().
- Added :VimFilerClose command.

2011-12-06
- Improved create filer behavior.

2011-12-03
- Improved redraw candidates.
- Improved vimfiler/execute source.

2011-12-01
- Fixed for UNC path.
- Fixed UNC root directory.

2011-11-30
- Added <2-LeftMouse> mapping.
- Added <RightMouse> mapping.
- Improved options.
- Implemented buffer_name option.

2011-11-29
- Fixed vimfiler#set_current_vimfiler() problem.

2011-11-28
- Fixed for UNC path.
- Implemented no quit option.
- Refactored.
- Fixed toggle mark lines error.

2011-11-25
- Detect modified buffer.
- Improved substitute path separator.

2011-11-18
- Improved redraw.
- Expand tree is implemented!
- Added expand tree recursive mapping.
- Fixed clear mark lines error.

2011-11-17
- Ver.3.1 development is started.
- Improved syntax.

------------------------------------------------------------------------------
ChangeLog 3.0

2011-11-17
- Fixed dummy action error.

2011-11-16
- Fixed documentation.
- Improved dummy action.
- Fixed grep behavior.
- Improved vimfiler history behavior.
- Added <Plug>(vimfiler_hide) mapping.
- Changed default mappings.
- Improved another vimfiler behavior.

2011-11-15
- Fixed initialization.

2011-11-11
- Improved syntax highlight.
- Added <Plug>(vimfiler_find) mapping.
- Vitalized.
- Changed sort behavior.
- Added g:vimfiler_data_directory option.
- Implemented save sort type.

2011-11-10
- Fixed :VimFilerDouble error.
- Fixed vimfiler/drive source.
- Added <Plug>(vimfiler_cursor_top) mapping.
- Improved switch to other window.

2011-11-06
- Fixed mappings name.

2011-11-05
- Improved restore another vimfiler behavior.

2011-11-02
- Improved vimfiler/mapping source.
- Improved redraw behavior.
- Deleted vimfiler/mapping source.
- Added <Plug>(vimfiler_toggle_simple_mode) mapping.
- Fixed change current directory.
- Improved <Plug>(vimfiler_print_filename) mapping.

2011-10-31
- Added vimfiler#do_action().

2011-10-25
- Fixed s:browse_check().

2011-10-23
- Improved check link.
- Fixed for ":edit ~".

2011-10-17
- Improved vimfiler mappings source.

2011-10-13
- Detect sudo vim.

2011-10-11
- Fixed for Vim 7.2.

2011-10-10
- Fixed variables initialize.
- Delted obsolute options.
- Improved vimfiler/drive source.

2011-10-05
- Added vimfiler/popd source.
- Improved execute file.

2011-09-27
- Set bufhidden.
- Improved syntax.

2011-09-24
- Added README.

2011-09-23
- Improved documentation.
- Changed <Plug>(vimfiler_cd) behavior.

2011-09-22
- Revised documentation.
- Added vimfiler/drive source.

2011-09-21
- Added vimfiler#mappings#search_cursor() function.
- Fixed vimfiler mappings.

2011-09-19
- Refactored local variable names.

2011-09-17
- Implemented context.

2011-09-15
- Fixed for netrw.

2011-09-04
- Fixed vimfiler create.
- Improved buffer name.

2011-09-03
- Improved cd.
- Improved expand directory.

2011-09-01
- Improved initialize vimfiler buffer.

2011-08-31
- Fixed new file action.

2011-08-29
- Fixed vimfiler buffer search.
- Fixed preview error.
- Fixed wrapper commands exists error.

2011-08-26
- Implemented event handler.
- Improved redraw screen.
- Improved event handler.
- Implemented completion interface.
- Parse cd path.
- Fixed grep error.

2011-08-25
- Improved vimfiler file interface.
- Fixed browse check.
- Improved behavior.

2011-08-24
- Improved vimfiler actions.
- Deleted g:vimfiler_cd_command option.
- Deleted mappings_caller().
- Improved exrename.

2011-08-23
- Improved switch vimfiler behavior.
- Fixed browser check.
- Fixed restore another vimfiler.
- Improved cd.

2011-08-17
- Added vimfiler/mask source.
- Added vimfiler/history source.
- Added vimfiler/mapping source.
- Changed g:vimfiler_sort_type default value.
- Added vimfiler/mask matcher.
- Added vimfiler/execute source.

2011-08-16
- Improved actions.
- Added vimfiler sort source.
- Deleted vimfiler clipboard.
- Added is_listed attribute.

2011-08-15
- Fixed some errors.
- Improved context.

2011-08-14
- Use unite.vim Ver.3(experimental).
- Deleted scheme file.
- Deleted vimfiler trash box routine.
- Deleted obsolute mapping.
- Improved action name.

2011-08-13
- Ver.3.0 development is started.

------------------------------------------------------------------------------
ChangeLog 2.0

2011-08-13
- Improved another vimfiler.
- Released ver.2.0.

2011-07-07
- Set no-quit option in unite-grep.

2011-07-01
- Improved sync vimfiler.

2011-06-26
- Improved cd internal command.
- Fixed exrename highlight.

2011-06-15
- Improved grep action.

2011-06-08
- Improved substitute path separator.

2011-06-03
- Improved grep action.
- Improved default filer behavior.

2011-05-29
- Use unite-grep in grep command.
- Fixed grep error.
- Improved move_to_other_window mapping.
- Added :VimFilerDouble command.

2011-05-27
- Fixed vital bug.

2011-05-12
- Use system_gui().

2011-05-11
- <Plug>(vimfiler_new_file) keymapping supports create multiple files.

2011-05-10
- Fixed <Plug>(vimfiler_execute).

2011-05-09
- Do autocmd BufNewFile.

2011-04-27
- Improved displays.
- Vitalized.

2011-01-11
- Fixed g:vimfiler_as_default_explorer.

2011-01-03
- Fixed edit file.

2011-01-01
- Fixed exrename initialize.

2010-12-19
- Fixed exrename error.
- Fixed exrename syntax.

2010-12-08
- Restored cd behavior.

2010-12-05
- Fixed cd command.

2010-11-30
- Improved examples.

2010-11-09
- Fixed g:vimfiler_safe_mode_by_default description.

2010-11-08
- Fixed exrename bug.

2010-11-07
- Improved modeline.

2010-11-04
- Added g:vimfiler_cd_command option.

2010-10-31
- Improved symbolic link.

2010-10-30
- When execute <Plug>(vimfiler_split_edit_file), g:vimfiler_edit_command is ignored.
- Display symbolic link.

2010-10-27
- Detect cd error.
- Improved cd.
- Convert path separator \ to / only for Windows.

2010-10-21
- Added :VimFilerTab command.
- Check t:unite_buffer_dictionary.

2010-10-11
- Improved safe mode view.
- Improved error detection.

2010-10-10
- Implemented safe mode.
- Added <Plug>(vimfiler_toggle_safe_mode) mapping.
- Added g:vimfiler_safe_mode_by_default option.
- Improved safe mode prompt.
- Improved safe mode.
- Disabled file operation mappings in safe mode.
- Added g:vimfiler_time_format option.
- Improved safe mode mappings.
- Safe mode is default.

2010-10-09
- Fixed shellslash bug.

2010-10-07
- Don't resolve link.

2010-10-06
- Disabled copy in Windows when cp.exe is not found.

2010-10-02
- Fixed vim buffer mode.
- Added :VimFilerSplit command.
- Silent error message.
- Improved vimfiler switch.

2010-10-01
- Fixed noshellslash bug.

2010-09-23
- Fixed grep.

2010-09-18
- Fixed current directory bug.

2010-09-09
- Improved h and l keymappings.

2010-08-26
- Improved grep.

2010-08-25
- Fixed cd bug.
- Improved default mappings.

2010-08-22
- Fixed edit.

2010-08-19
- Fixed readonly.
- Added g:vimfiler_wildignore option.

2010-08-13
- Improved error message.
- Added <Plug>(vimfiler_edit_binary_file) mapping.
- Fixed make directory check.

2010-08-12
- Improved copy option.

2010-08-08
- Improved default buffer settings.
- Changed <Plug>(vimfiler_select_sort_type) default mapping.

2010-08-07
- Implemented <Plug>(vimfiler_split_edit_file).
- Improved edit.

2010-08-02
- Don't change current directory.
- Added <Plug>(vimfiler_cd) mapping.
- Improved mappings.

2010-08-01
- Improved rename copy.

2010-07-31
- Fixed documentation.
- Improved edit behavior.
- Implemented rename copy.
- Detect same directory.

2010-07-29
- Improved move_to_drive().
- Improved mask.
- Fixed visible doted file bug.
- Implemented <Plug>(vimfiler_jump_to_history_directory).
- Revised documentation.

2010-07-28
- Implemented dictionary plugin.
- Added <Plug>(vimfiler_move_to_history_forward) and <Plug>(vimfiler_move_to_history_back) key-mappings.
- Added g:vimfiler_enable_clipboard option.
- Revised documentation.
- Added mappings manual.

2010-07-26
- Supported conceal feature.

2010-07-19
- Deleted cursorline.

2010-07-18
- Improved omit filename.

2010-07-17
- Optimized head match.

2010-07-12
- Started Ver.2.0 development.
- Improved vimproc check.

------------------------------------------------------------------------------
ChangeLog 1.50
2010-06-25
- Improved mappings.

2010-06-22
- Use vimproc#system_bg().

2010-06-21
- Improved marked file syntax.
- Added <Plug>(vimfiler_move_to_other_window) mapping.
- Fixed error.
- Use vimproc#open().
- Added <Plug>(vimfiler_switch_vim_buffer_mode) and <Plug>(vimfiler_restore_vimfiler_mode) mappings.

2010-06-18
- Use command.

2010-06-15
- Improved wincmd.

2010-06-13
- Optimized redraw.
- Refactoringed mappings.
- Implemented <Plug>(vimfiler_toggle_mark_selected_lines) mapping.

2010-06-12
- Supported symbolic link and Win32 shortcut.
- Improved filetype detect.
- Added g:vimfiler_extensions option.

2010-06-11
- Fixed exrename error.

2010-06-10
- Fixed vimfiler#get_filename() error.

2010-06-09
- Optimized <Plug>(vimfiler_loop_cursor_down) and <Plug>(vimfiler_loop_cursor_up).

2010-06-05
- Improved initialize cursor.

2010-06-01
- Fixed critical error.

2010-05-24
- Fixed open bug.

2010-05-23
- Improved xdg-open.
- Fixed error.
- Improved g:vimfiler_as_default_explorer.
- Implemented extended rename.

2010-05-18
- Fixed file size calculation.
- Changed some default mappings.
- Deleted <Plug>(vimfiler_open_next_file) and <Plug>(vimfiler_open_previous_file) default mappings.
- Improved sort.
- Improved another vimfiler detect.

2010-05-16
- Added g:vimfiler_sort_type and g:vimfiler_directory_display_top options.
- Implemented sort.

2010-05-15
- Improved cygwin detect.
- Added VimFilerDetectDrives command.
- Added g:vimfiler_detect_drives option.
- Implemented restore from trashbox.
- Fixed move bug in Windows.
- Added <Plug>(vimfiler_grep) mapping.
- Added <Plug>(vimfiler_open_next_file) and <Plug>(vimfiler_open_previous_file) mappings.

2010-05-13
* Improved environment detect.

2010-05-09
* Deleted duplicated mapping.
* Renamed open another vimfiler mapping.
* Added <Plug>(vimfiler_sync_with_another_vimfiler) mapping.
* Improved vimfiler's cursor position.
* Added <Plug>(vimfiler_jump_to_directory) mapping.
* Fixed visible dot files bug.

2010-05-07
* Added g:vimfiler_max_filename_width and g:vimfiler_min_filename_width options.
* Improved redraw.
* Improved syntax.
* Added VimFilerSimple command.
* Improved execute file.
* popup shell clears markes.
* Optimized display.
* Added <Plug>(vimfiler_print_filename) keymapping.
* Implemented delete and force delete.
* Implemented paste.
* Implemented set mask patterns.

2010-05-06
* Renamed g:vimfiler_use_default_explorer as g:vimfiler_as_default_explorer.
* Fixed g:vimfiler_edit_command bug.
* Fixed compare string.
* Improved augroup name.

2010-05-05
* Improved encoding.
* Added g:vimfiler_use_default_explorer option.
* Fixed current directory bugs.
* Improved execute file.
* Improved syntax highlight.
* Calculate directory date.
* Fixed file size view.
* Detect Mac.
* Check autochdir.

2010-05-04
* Improved system().
* Fixed depulicated tags.

2010-05-03
* Set noautochdir.
* Added g:vimfiler_split_command and g:vimfiler_edit_command options.
* Added g:vimfiler_pedit_command option.
* Added <Plug>(vimfiler_exit) mapping.
* Added <Plug>(vimfiler_execute_shell_command) mapping.
* Improved <Plug>(vimfiler_popup_shell) mapping.
* Fixed some bugs.
* Implemented file operations.

2010-03-11
* Deleted <Plug>(vimfiler_move_to_current_directory) mapping.
* Added <Plug>(vimfiler_delete) mapping.

2010-03-03
* Improved restore current directory.
* Caching current files.
* Improved marks.
* Improved cd.

------------------------------------------------------------------------------
ChangeLog 1.x-1.00
    1.02 :
    - Added <Plug>(vimfiler_execute) and <Plug>(vimfiler_move_to_current_directory) mappings.
    - Save cursor position when redraw and cd.
    - Analyse "Current directory: " line when <Plug>(vimfiler_execute).
    - Improved buffer search in <Plug>(vimfiler_split_create).
    - Improved detect for mac.
    - Added g:vimfiler_execute_file_list option.

    1.01 :
    - Optimized speed.
    - Improved window size.
    - Fixed restore current directory bug.
    - Improved display file size.
    - Changed execute file keymapping.
    - Added help and preview keymappings.
    - Added g:vimfiler_no_default_key_mappings variable.
    
    1.00 :
    - Initial version.
    - Implemented move to other drive.
    - Implemented filetype colors.
    - Implemented execute new gvim key-mapping.
    - Implemented execute external filer key-mapping.
    - Implemented execute external command key-mapping.
    - Fixed file execution bug.
    - Implemented visible dot file.
    - Added popup shell key-mapping.
    - Added presentation file.
    - Improved cd internal command.
    - Implemented functions like dual screen filer.
    - Implemented loop cursor.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
