macro generic "<esc>1" ":set sendmail=\"/usr/local/bin/msmtp -a toxalan\""
macro generic "<esc>2" ":set sendmail=\"/usr/local/bin/msmtp -a xxxxx\""
macro generic "<esc>3" ":set sendmail=\"/usr/local/bin/msmtp -a xxxxx\""
macro generic "<esc>4" ":set sendmail=\"/usr/local/bin/msmtp -a xxx\""

bind editor <Tab> complete-query
bind editor ^T complete
bind editor <space> noop 
bind pager <UP> previous-page   # I hate default mutt keybindings
bind pager <DOWN> next-page     # so I use UP & DOWN to VIEW message,
bind pager p previous-unread    # NOT to JUMP to next/prev one!
bind pager n next-unread        # It's better to use p & p for this
bind pager ,p print-message     # Print message when viewing it
# macro index,pager A "<pipe-message>abook --add-email<return>" "add the sender address to abook"
macro index,pager A "<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<return><pipe-message>abook --add-email-quiet<return><enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>" "add the sender address to abook"
macro pager   W        "|urlview\n"
macro index   S       "!~/.mutt/scripts/msgnum.sh\r"
macro pager   G       "!getmail\r"  # call getmail from anythere inside mutt
macro browser G       "!getmail\r"
macro index   G       "!getmail\r"
macro pager,browser,index   E       "!getmail -r ~/.getmail/getmailrc2\r"
macro index   z       "|sa-learn --no-sync --spam\n"
macro pager   z       "|sa-learn --no-sync --spam\n"
macro index   Z       "|sa-learn --no-sync --ham\n"
macro pager   Z       "|sa-learn --no-sync --ham\n"
macro index   ",d"     "c=default" 
macro index   ",y"     "c=yesodweb"
macro index   ",r"     "c=ruby-talk"
macro index   ",p"     "c=postponed"
macro index   ",j"     "c=junk" 
macro index   ",v"     "c=vfolder" 

bind editor <Tab> complete-query
bind editor ^T complete

macro index,pager c "<change-folder>?<toggle-mailboxes>" "open a different folder"

macro index p "<enter-command>set pager_index_lines=30"
macro index P "<enter-command>set pager_index_lines=0"

bind index gg       first-entry
bind index G        last-entry

bind index R        group-reply
bind index u        sync-mailbox
bind index <space>  collapse-thread
bind index _        collapse-all

bind compose p postpone-message

# Pager Key Bindings ---------------------------------
bind pager k  previous-line
bind pager j  next-line
bind pager gg top
bind pager G  bottom

#bind index,pager q  noop
#bind attach,browser,pager x noop

bind pager R  group-reply

# View attachments properly.
bind attach <return> view-mailcap

bind index ZZ         exit
bind attach,browser,pager z exit

macro index <F8> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<shell-escape>notmuch-mutt -r --prompt search<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
      "notmuch: search mail"

macro index <F9> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<pipe-message>notmuch-mutt -r thread<enter>\
<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
      "notmuch: reconstruct thread"

macro index <F6> \
"<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
<pipe-message>notmuch-mutt tag -- -inbox<enter>\
<enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
      "notmuch: remove message from inbox"

# vim:ft=muttrc
