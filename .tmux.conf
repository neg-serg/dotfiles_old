#-------~---~----------~----------~----
#       .---..-.-.-..-..-..-..-.
#       `| |'| | | || || | >  <
#        `-' `-'-'-'`----''-''-'
#-------~---~----------~----------~----
set -g prefix ^b
setw -g mode-mouse off
setw -g mode-keys vi

set -g history-limit 100000
# Use ZSH
set -g default-shell /bin/zsh
set -g default-command /bin/zsh


set -g default-terminal "rxvt-256color"
#--Paste'n'copy
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


# ctrl+up/down arrows cycles through windows
bind -n M-n new-window
bind-key -n C-up select-pane -t :.-
bind-key -n C-down select-pane -t :.+
# reload config without killing server
#bind r source-file ~/.tmux.conf
# more intuitive keybindings for splitting
# set vi keys
unbind [
bind Escape copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix
# toggle last window like screen
bind-key C-b last-window
# confirm before killing a window or the server
bind-key k kill-window
bind-key K confirm kill-server
# toggle statusbar
bind-key b set-option status
# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev
# open a man page in new window
bind m command-prompt "split-window 'exec man %%'"
# quick view of processes
#bind '~'  "exec ranger"
#bind '~' split-window "exec htop"
# scrollback buffer n lines
set -g history-limit 9000
# listen for activity on all windows
set -g bell-action any
# on-screen time for display-panes in ms
set -g display-panes-time 2000
# start window indexing at one instead of zero
set -g base-index 1
# enable wm window titles
set -g set-titles on
# disable auto renaming
setw -g automatic-rename on
# border colours
set -g pane-border-fg blue
set -g pane-active-border-bg default
# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"
# session initialization
#new -d -s0 -nTTYtter 'ttytter'
#setw -t0:0
#neww -d -nvifm 'vifm'
#setw -t0:1
#neww -d -nncmpcpp 'ncmpcpp'
#setw -t0:2
#selectw -t 0
# statusbar --------------------------------------------------------------
#       #[fg=white]#]#[fg=white]]
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20

# default statusbar colors
set -g status-fg white
set -g status-bg default
####
set -g status-attr bright
#set -g status-attr dim

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
#set -g default-terminal "screen"
setw -g aggressive-resize on

bind space command-prompt -p index "select-window"
#bind s new-window -n "su" su
#bind i new-window -n "irb" irb
#bind j new-window -d -n "jd" jd.sh
#bind v new-window -d -n "vbox" VirtualBox
#bind m new-window -n "ncmpcpp" "setw monitor-activity off; exec ncmpcpp"
#bind x new-window -n "xvfb" "setw monitor-activity off; exec ruby /home/unexist/projects/subtle/test/xserver.rb"
bind S command-prompt -p "Host?" "new-window -n 'ssh:%1' 'ssh %1'"
bind A command-prompt -p "Name?" "setw automatic-rename off; rename-window %%"
bind p command-prompt -p "Filename?" "capture-pane; save-buffer %%; delete-buffer"
bind e command-prompt -p "Eval?" "display-message -p 'exec ruby -e %%'"

# Clock
#setw -g clock-mode-colour colour250
#setw -g clock-mode-style 24

# Statusbar starting in X or not
#if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
#if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'

# UTF8
setw -g utf8 on
set -g status-utf8 on

# Choose Window
bind m choose-window

# Choose Session
bind a choose-session

unbind j
unbind l
bind j split-window -h
bind l split-window

# pane/window movement
unbind b
unbind B
bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key m command-prompt -p "move window to:" "move-window -t ':%%'"

# pane selection
bind Left select-pane -L
bind Right select-pane -R
bind Up select-pane -U
bind Down select-pane -D

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Statusbar starting in X or not
#if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
#if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'

###CLIPBOARD selection integration
###Requires prefix key before the command key
##Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# Basic moving/resizing/swapping (sort of vi-like)
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R
#bind h run-shell "tmux_swap_pane_dir -L"
#bind j run-shell "tmux_swap_pane_dir -D"
#bind k run-shell "tmux_swap_pane_dir -U"
#bind l run-shell "tmux_swap_pane_dir -R"
bind -r C-Left resize-pane -L
bind -r C-Down resize-pane -D
bind -r C-Up   resize-pane -U
bind -r C-Right resize-pane -R
bind -r Left resize-pane -L
bind -r Down resize-pane -D
bind -r Up resize-pane -U
bind -r Right resize-pane -R

# Keybindings
bind | split-window -h
bind \ split-window -v
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Statusbar if tmux runs in X
#
set -g status-attr          default
set -g status-right-length  40
set -g status-left-length   40

# Copy into clipboard
bind C-c choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i -b\""
# Paste from clipboard
bind C-v run "xsel -o -b | tmux load-buffer - && tmux paste-buffer"
# Copy into primary
bind C-y choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i\""
# Paste from primary
bind C-p run "xsel -o | tmux load-buffer - && tmux paste-buffer"

#set -g status-left '#[fg=blue]#H #[fg=black,bright]• #[fg=green]#(uname -r) #[fg=black,bright]• #[fg=yellow]#(acpi -t | cut -d" " -f4)°C #[default]'
#set -g status-right '#[fg=cyan] #(uptime | cut -d " " -f4-5 | cut -d"," -f1) #[fg=black,bright]• #[fg=magenta]#(cut -d" " -f1-3 /proc/loadavg)'
#set -g status-left '#[fg=blue,bold] #S#[default,fg=white][#[fg=yellow]#I:#P#[fg=white]]#[fg=black,bold]@#[fg=red]#H #[fg=black,bold]» #T#[default]'
#set -g status-left-length 80
#set -g status-left-fg black
#set -g status-right ''
#--------[My last status conf]---------------------------
#set -g status-left  '#[fg=cyan][#[fg=cyan] %H:%M #]#[fg=cyan]#]#[fg=cyan]]['
set -g status-left  '#[fg=cyan][ #[fg=cyan,bright]%H:%M #[fg=cyan,nobright]]'
#set -g status-right '#[fg=cyan]][#[fg=cyan] Up#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")#[fg=black] • #[fg=grey,bright]#(cut -d " " -f 1-4 /proc/loadavg) #[fg=cyan,nobright]]'
set -g status-right '#[fg=cyan][#[fg=cyan,bright] Up#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")#[fg=black,bright] • #[fg=grey,bright]#(cut -d " " -f 1-4 /proc/loadavg) #[fg=cyan,nobright]]'
#set-option -g status-left   '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
#set-option -g status-right  '#[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R#(acpi | cut -d ',' -f 2)#[default]'

## Unbinds
setw -g window-status-format         ' #[fg=white]#I: #W '
setw -g window-status-current-format '#[fg=blue,nobright][#[fg=default,nobright]#I: #W#[fg=blue]]'
#setw -g window-status-format " #F#I:#W#F "
#setw -g window-status-current-format " #F#I:#W#F "

bind -n M-Tab next-window
bind -n M-BTab previous-window

#bind [ previous-layout
#bind ] next-layout

bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -n C-M-w kill-pane
bind w kill-window
set -sg escape-time 0

bind X next-layout
bind Z previous-layout

set -g default-path '~'
