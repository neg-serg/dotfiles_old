#-------~---~----------~----------~----
#       .---..-.-.-..-..-..-..-.
#       `| |'| | | || || | >  <
#        `-' `-'-'-'`----''-''-'
#-------~---~----------~----------~----

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
# set -sg escape-time 0
set -sg escape-time 1

# send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix

setw -g aggressive-resize on

set -g prefix ^b
setw -g mode-mouse off
setw -g mode-keys vi

set -g history-limit 100000

# for vim-alt(fixkey) keys compatibility
# try not to use it to prevent disconnect
set -g xterm-keys on
set -g default-shell /bin/zsh
set -g default-command /bin/zsh
set -g default-terminal "screen-256color"

#--Paste'n'copy
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy Escape cancel
bind-key -t vi-copy V select-line
bind-key -t vi-copy r rectangle-toggle

bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"

run-shell ~/.tmux/tmux-resurrect/resurrect.tmux
set -g @resurrect-capture-pane-contents 'on'

bind -n M-n new-window
unbind [
bind Escape copy-mode
# toggle last window like screen
bind-key C-b last-window
bind-key k kill-window
# confirm before killing the server
bind-key K confirm kill-server
# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev
# listen for activity on all windows
set -g bell-action any
# on-screen time for display-panes in ms
set -g display-panes-time 2000
# start window indexing at one instead of zero
set -g base-index 1
# enable wm window titles
setw -g automatic-rename yes
# border colours
set -g pane-border-fg blue
set -g pane-active-border-bg default
# wm window title string (uses statusbar variables)
set -g set-titles on
set-option -g set-titles-string 'tmux:#I [ #W #T ]'
set-option -g visual-activity on
set -g status-keys vi

set -g message-fg white
set -g message-bg black
set -g message-attr bright
setw -g aggressive-resize on
set-window-option -g aggressive-resize on

bind space command-prompt -p index "select-window"

setw -g utf8 on
set -g status-utf8 on

bind a choose-session

unbind b
unbind B

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY ST_TERM"

bind | split-window -h
bind _ split-window -v
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

# Copy into clipboard
bind C-c choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i -b\""
# Paste from clipboard
bind C-v run "xsel -o -b | tmux load-buffer - && tmux paste-buffer"
# Copy into primary
bind C-y choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i\""
# Paste from primary
bind C-p run "xsel -o | tmux load-buffer - && tmux paste-buffer"

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -n M-C-w if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' kill-pane

bind X next-layout
bind Z previous-layout

# for ~/.tmux.conf
# urlscan as context and url view
bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; \
        new-window -n "urlscan" '$SHELL -c "urlscan -c < /tmp/tmux-buffer"'

set -g mode-bg colour243
set -g mode-fg colour232

bind -n C-M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-h) || tmux select-pane -L"
bind -n C-M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-j) || tmux select-pane -D"
bind -n C-M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-k) || tmux select-pane -U"
bind -n C-M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-l) || tmux select-pane -R"
set -g status-justify centre # center align window list
run-shell "powerline-daemon -q"
source /usr/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
set-option -g status-left  ''

# set -g window-status-format "#[$_POWERLINE_WINDOW_COLOR]$_POWERLINE_LEFT_HARD_DIVIDER_SPACES#I #[$_POWERLINE_WINDOW_DIVIDER_COLOR]$_POWERLINE_LEFT_SOFT_DIVIDER#[default]#W "
# set -g window-status-current-format "#[$_POWERLINE_WINDOW_CURRENT_HARD_DIVIDER_COLOR]$_POWERLINE_LEFT_HARD_DIVIDER#[$_POWERLINE_WINDOW_CURRENT_COLOR]#I $_POWERLINE_LEFT_SOFT_DIVIDER#[$_POWERLINE_WINDOW_NAME_COLOR]#W "
# set -g status-left "#[$_POWERLINE_SESSION_HARD_DIVIDER_NEXT_COLOR]$_POWERLINE_LEFT_HARD_DIVIDER#(eval \$POWERLINE_COMMAND tmux left)"

# bind-key -n M-C-Up switch-client -p
# bind-key -n M-C-Down switch-client -n
# bind-key -n S-F11 resize-pane -Z
# bind-key -n M-F11 break-pane
# bind-key -n C-F11 join-pane -h -s :. -t :-1
# bind-key -n C-F8 next-layout
