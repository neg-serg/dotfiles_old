#-------~---~----------~----------~----
#       .---..-.-.-..-..-..-..-.
#       `| |'| | | || || | >  <
#        `-' `-'-'-'`----''-''-'
#-------~---~----------~----------~----
# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
# set -sg escape-time 0
set -sg escape-time 1

setw -g aggressive-resize on

set -g prefix ^b
setw -g mode-mouse off
setw -g mode-keys vi

set -g history-limit 100000
# Use ZSH
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# for vim-alt(fixkey) keys compatibility
set -g xterm-keys on
# don't use it because of highlight bug
# set -g default-terminal "screen-256color"
# set -g default-terminal "rxvt-unicode"
set -g default-terminal "rxvt-unicode-256color"

#--Paste'n'copy
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

bind-key -t vi-copy Escape cancel
bind-key -t vi-copy V select-line
bind-key -t vi-copy r rectangle-toggle
bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"

# ctrl+up/down arrows cycles through windows
bind -n M-n new-window
bind-key -n C-up select-pane -t :.-
bind-key -n C-down select-pane -t :.+
# reload config without killing server
#bind r source-file ~/.tmux.conf
# more intuitive keybindings for splitting
# set vi keys
unbind [
bind Escape copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix
# toggle last window like screen
bind-key C-b last-window
# confirm before killing a window or the server
bind-key k kill-window
bind-key K confirm kill-server
# toggle statusbar
bind-key b set-option status
# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev
# open a man page in new window
bind m command-prompt "split-window 'exec man %%'"
# quick view of processes
# bind '~'  "exec ranger"
# scrollback buffer n lines
# listen for activity on all windows
set -g bell-action any
# on-screen time for display-panes in ms
set -g display-panes-time 2000
# start window indexing at one instead of zero
set -g base-index 1
# enable wm window titles
set -g set-titles on
# disable auto renaming
# setw -g automatic-rename on
# enable auto renaming
setw -g automatic-rename yes
# border colours
set -g pane-border-fg blue
set -g pane-active-border-bg default
# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"
# statusbar --------------------------------------------------------------
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 10

# default statusbar colors
set -g status-fg white
set -g status-bg default

set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
#set -g default-terminal "screen"
setw -g aggressive-resize on
set-window-option -g aggressive-resize on

bind space command-prompt -p index "select-window"
bind S command-prompt -p "Host?" "new-window -n 'ssh:%1' 'ssh %1'"
bind A command-prompt -p "Name?" "setw automatic-rename off; rename-window %%"
bind p command-prompt -p "Filename?" "capture-pane; save-buffer %%; delete-buffer"
bind e command-prompt -p "Eval?" "display-message -p 'exec ruby -e %%'"

# UTF8
setw -g utf8 on
set -g status-utf8 on

# Choose Window
bind m choose-window

# Choose Session
bind a choose-session

# pane/window movement
unbind b
unbind B
bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key m command-prompt -p "move window to:" "move-window -t ':%%'"

# pane selection
bind Left select-pane -L
bind Right select-pane -R
bind Up select-pane -U
bind Down select-pane -D

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Basic moving/resizing/swapping (sort of vi-like)
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind -r C-Left resize-pane -L
bind -r C-Down resize-pane -D
bind -r C-Up   resize-pane -U
bind -r C-Right resize-pane -R
bind -r Left resize-pane -L
bind -r Down resize-pane -D
bind -r Up resize-pane -U
bind -r Right resize-pane -R

bind | split-window -h
bind \ split-window -v
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded..".

bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Copy into clipboard
bind C-c choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i -b\""
# Paste from clipboard
bind C-v run "xsel -o -b | tmux load-buffer - && tmux paste-buffer"
# Copy into primary
bind C-y choose-buffer "run \"tmux save-buffer -b '%%' - | xsel -i\""
# Paste from primary
bind C-p run "xsel -o | tmux load-buffer - && tmux paste-buffer"

#--------[My last status conf]---------------------------
set-option -g status-left   '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right  '#[fg=cyan]»» #[fg=blue,bold]##S #[fg=magenta]%R#(acpi | cut -d ',' -f 2)#[default]'

## Unbinds
setw -g window-status-format         ' #[fg=default,nobright]#I: #W '
setw -g window-status-current-format '#[fg=blue,nobright][#[fg=default,nobright]#I: #W#[fg=blue]]'

bind -n M-Tab next-window
bind -n M-BTab previous-window

#bind [ previous-layout
#bind ] next-layout

bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -n M-C-w if-shell 'test `~/bin/scripts/not_tmuxed_wim` == "TRUE"' kill-pane

bind X next-layout
bind Z previous-layout

# set -g default-path '~'
# set terminal-overrides 'rxvt-unicode*:Cc=\E]12;%p1%s\E\\'

# for ~/.tmux.conf
# urlscan as context and url view
bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; \
        new-window -n "urlscan" '$SHELL -c "urlscan -c < /tmp/tmux-buffer"'

#set -g pane-border-bg default
#set -g pane-border-fg colour235
#set -g pane-active-border-bg default
#set -g pane-active-border-fg colour240
#set -g display-panes-colour colour233
#set -g display-panes-active-colour colour245
set -g mode-bg colour243
set -g mode-fg colour232

#--[ New statusbar ]-----------------------------------------------
set-option -g status-interval 5
set-option -g status-left-length 60
set-option -g status-left '#[fg=cyan]> #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=cyan]>> #[fg=black,bold]###[fg=blue,bold]#S:#P #[fg=cyan,nobold]%a,%m-%d#[fg=white]|#[fg=black,bold]%j#[fg=white]|#[fg=blue,bold]%R#[default]'
set-option -g visual-activity on

bind -n C-M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-h) || tmux select-pane -L"
bind -n C-M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-j) || tmux select-pane -D"
bind -n C-M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-k) || tmux select-pane -U"
bind -n C-M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-l) || tmux select-pane -R"
