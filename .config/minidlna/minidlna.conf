port=8200
network_interface=enp7s0
user=neg

# set this to the directory you want scanned.
# * if you want multiple directories, you can have multiple media_dir= lines
# * if you want to restrict a media_dir to specific content types, you
#   can prepend the types, followed by a comma, to the directory:
#   + "A" for audio  (eg. media_dir=A,/home/jmaggard/Music)
#   + "V" for video  (eg. media_dir=V,/home/jmaggard/Videos)
#   + "P" for images (eg. media_dir=P,/home/jmaggard/Pictures)
#   + "PV" for pictures and video (eg. media_dir=PV,/home/jmaggard/digital_camera)
media_dir=/home/neg/vid/new/share

# set this to merge all media_dir base contents into the root container
# note: the default is no
#merge_media_dirs=no

friendly_name=Unreal_DLNA

# set this if you would like to specify the directory where you want MiniDLNA to store its database and album art cache
db_dir=/home/$USER/.config/minidlna/cache

# set this if you would like to specify the directory where you want MiniDLNA to store its log file
log_dir=/home/$USER/tmp/

# set this to change the verbosity of the information that is logged
# each section can use a different level: off, fatal, error, warn, info, or debug
#log_level=general,artwork,database,inotify,scanner,metadata,http,ssdp,tivo=warn

# this should be a list of file names to check for when searching for album art
# note: names should be delimited with a forward slash ("/")
album_art_names=Cover.jpg/cover.jpg/AlbumArtSmall.jpg/albumartsmall.jpg/AlbumArt.jpg/albumart.jpg/Album.jpg/album.jpg/Folder.jpg/folder.jpg/Thumb.jpg/thumb.jpg

# set this to no to disable inotify monitoring to automatically discover new files
# note: the default is yes
inotify=yes

# set this to yes to enable support for streaming .jpg and .mp3 files to a TiVo supporting HMO
enable_tivo=no

# set this to strictly adhere to DLNA standards.
# * This will allow server-side downscaling of very large JPEG images,
#   which may hurt JPEG serving performance on (at least) Sony DLNA products.
strict_dlna=no

# default presentation url is http address on port 80
#presentation_url=http://www.mylan/index.php

# notify interval in seconds. default is 895 seconds.
notify_interval=900

# serial and model number the daemon will report to clients
# in its XML description
serial=12345678
model_number=1

# specify the path to the MiniSSDPd socket
#minissdpdsocket=/var/run/minissdpd.sock

# use different container as root of the tree
# possible values:
#   + "." - use standard container (this is the default)
#   + "B" - "Browse Directory"
#   + "M" - "Music"
#   + "V" - "Video"
#   + "P" - "Pictures"
#   + Or, you can specify the ObjectID of your desired root container (eg. 1$F for Music/Playlists)
# if you specify "B" and client device is audio-only then "Music/Folders" will be used as root
#root_container=.

# always force SortCriteria to this value, regardless of the SortCriteria passed by the client
#force_sort_criteria=+upnp:class,+upnp:originalTrackNumber,+dc:title

# maximum number of simultaneous connections
# note: many clients open several simultaneous connections while streaming
#max_connections=50

# list of audio codecs that needs to be transcoded separated by a forward slash ("/")
# possible values can be obtained by running "ffmpeg -codecs"
#
# there is also special value "all" (without quotes), which forces all audio files to be transcoded
#
# It is possible to restrict the settings only to a certain client by prepending the list with
# the client name, followed by colon. The possible client names can be found in the file "clients.c"
# in the source code. If the client name is omitted,  the settings are used for all clients.
# For example, to force transcoding of flac and speex for all clients, but transcode vorbis only for
# Samsung TV's, the following settings can be used:
#   transcode_audio_codecs=flac/speeks
#   transcode_audio_codecs=Samsung Series C:vorbis
transcode_audio_codecs=flac/vorbis
# full path to the transcoder that is used for audio transcoding
#
# It is possible to restrict the settings only to a certain client by prepending the list with
# the client name, followed by colon as described previously for transcode_audio_codecs option.
# 
# the transcoder is passed following parameters:
#     $1 - source file (ie. the file that needs to be transcoded)
#     $2 - start position (in seconds)
#     $2 - duration (in seconds)
#
# example transcoding scripts are installed in
#   DATADIR/minidlna/transcodescripts
# where DATADIR is usually /usr/share or /usr/local/share
transcode_audio_transcoder=/usr/share/minidlna/transcodescripts/transcode_audio

# list of video containers that needs to be transcoded
# possible values can be obtained by running "ffmpeg -formats"
# The format in which the settings should be written is the same
# as the format used for the "transcode_audio_codecs".
transcode_video_containers=
# list of video codecs that needs to be transcoded
# possible values can be obtained by running "ffmpeg -codecs"
# The format in which the settings should be written is the same
# as the format used for the "transcode_audio_codecs".
transcode_video_codecs=vp8/theora/flv/flv1/svq3
# full path to the transcoder that is used for video transcoding
# for details, see comments on transcode_audio_transcoder
transcode_video_transcoder=/usr/share/minidlna/transcodescripts/transcode_video

# list of image extensions (lowercase) that needs to be transcoded
# The format in which the settings should be written is the same
# as the format used for the "transcode_audio_codecs".
transcode_image=png/gif/tif/tiff/cr2/nef/pef
# full path to the transcoder that is used for audio transcoding
#
# the transcoder is passed following parameters:
#     $1 - source file (ie. the file that needs to be transcoded)
#     $2 - destination file
#
# full path to the transcoder that is used for video transcoding
# for details, see comments on transcode_audio_transcoder
transcode_image_transcoder=/usr/share/minidlna/transcodescripts/transcode_image
