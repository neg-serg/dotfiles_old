#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
# [ $TRACE ] && CHILD="toggle $@" . $PARENT

# herbstluftwm
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ............................................................ Toggle operations

# Usage: toggle <msg>, start/stop visible app or raise app to current desktop
#        toggle term <msg>, start/stop visible terminal app or goto terminal desktop (tag)

# refresh in panel title to update frame status, see draw panel
touch_panel() {
  xtitle -f 'T%s' >$(cat $PANEL_FIFO)
}

# ......................................................... Context applications

# close by winid
close() {
  tag=$(herbstclient attr clients.$1.tag)
  # kill instance if already visible
  [ $tag -ne $(query tag) ] && [ $tag -ne $(query tag inactive) ] && return 1
  herbstclient close $1
  # clear panel title as required
  focus window
  return 0
}

# special term processing toggles on unique title
toggle_term() {
  if xdotool search --limit 1 --classname "$1" >/dev/null ;then
    for i in $(query winids)
    do
      if herbstclient compare clients.$i.instance = $1 ;then
        if ! close $i ;then
          # goto desktop
          herbstclient use $tag
          herbstclient focus $i
        fi
        break
      fi
    done
  else
    # see term (urxvt)
    $msg $@
  fi
}

# toggle application, note application specific exception handling
toggle_app() {
  # handle rox filer binary name
  [ $msg = rox ] && app=ROX-Filer
  if pgrep -lf ${app:-$msg} | grep -qv toggle ;then
    # xpad multiple windows shortcut
    if [ $msg = xpad ] ;then
      xpad --quit
      exit
    fi
    app=${app:-$msg}
    lock
    focus=true
    for i in $(query winids)
    do
      if herbstclient compare clients.$i.instance = $app ;then
        if ! close $i ;then
          # stack windows
          [ $focus ] && focus frame
          unset focus
          herbstclient bring $i
        fi
      fi
    done
    unlock
  else
    focus $msg $@
  fi
}

# ....................................................................... Toggle

msg=$1
[ $msg ] && shift || usage $0
if [ -e ${0%/toggle}/functions/toggle/$msg ] ;then
  . ${0%/toggle}/functions/toggle/$msg $@
elif [ $msg = term ] ;then
  toggle_term $@
elif which $msg >/dev/null 2>&1 ;then
  toggle_app
else
  usage $0
fi
herbstclient emit_hook focus_changed

# vim: set ft=sh: #
