# # vim: set ft=sxhkdrc:
# #
# # bspwm hotkeys
# #
# 
# alt + shift + q
# 	bspc quit 1 && pkill bar && pkill dzen2
# 
# # Toggle panels
# alt + q
# 	{pkill panel; pkill cat; pkill conky; bspc config top_padding 0 ,\
# 	bspc config top_padding 14; $HOME/.config/bspwm/panel/panel & }
# 
# 
# # Workstation Monitor
# alt + w
# 	bspc monitor -f next
# 
# # Kill all detached tmux sessions
# alt + x
# 	$HOME/scripts/tmux_purge
# 
# # Close window
# alt + shift + x
# 	bspc  window -c
# 
# # Kill window
# alt + ctrl + shift + x
# 	bspc  window -k
# 
# # Toggle tile
# alt + {_,shift +} t
# 	bspc window -t {floating,fullscreen}
# 
# # Lock node
# alt + shift + p
# 	bspc window -t private
# 
# # Balance tree
# alt + b
# 	bspc desktop -B
# 
# # Presel window for splitting
# alt + ctrl + {h,j,k,l}
# 	bspc window -p {left,down,up,right}
# 
# # Move window into presel position
# alt + shift {a,s,d,f}
# 	bspc window -w {left.manual,down.manual,up.manual,right.manual}
# 
# # Select windows, or move
# alt + {_,shift + }{h,j,k,l}
# 	bspc window -{f,s} {left,down,up,right} || bspc window -f {prev, prev, next, next}
# 
# # Resize nodes
# alt + {a,f}
# 	$HOME/scripts/window_move.sh {-p,-n} -x -s 20
# alt + {s,d}
# 	$HOME/scripts/window_move.sh {-p,-n} -y -s 20
# 
# # Move floating windows (requires baskerville's xdo)
# alt + {Left,Right,Up,Down}
#     xdo move {-x -20,-x +20,-y -20,-y +20}
# 
# # Resize floating windows
# alt + shift + {Left,Right,Up,Down}
#     xdo resize {-w -20,-w +20,-h -20,-h +20}    bspc window -e {left -10,down +10,up -10,right +10} || {right -10,up +10,down -10,left +10}
# 
# # Move current window to largest space
# alt + Return
# 	bspc window -s biggest
# 
# # Mirror and flip leaves of tree
# alt + {comma,period}
# 	bspc desktop -F {horizontal,vertical}
# 
# # Rotate leaves of tree
# alt + shift + {comma,period}
# 	bspc desktop -R {90,270}
# 
# # Select previous / next desktop
# alt + {p,n}
# 	bspc desktop -f {prev.occupied,next.occupied} 
# 
# # Lock a window from closing
# alt + Escape
# 	bspc window -t locked 
# 
# # Toggle monocle
# alt + space 
# 	bspc desktop -l next
# 
# # Toggle pseudotiled (floating in tile)
# alt + shift + space 
# 	bspc window -t pseudo_tiled
# 
# # Focus on floating / tiled
# alt + e
# 	bspc window -f {next.floating,next.tiled}
# 
# # Change desktop padding
# alt + {_, shift} + bracketright
# 	bspc config -d focused right_padding $((`bspc config -d focused right_padding` {+,-} 20 ))
# 
# alt + {_, shift} + bracketleft
# 	bspc config -d focused left_padding $((`bspc config -d focused left_padding` {+,-} 20 ))
# 
# ctrl + {_, shift} + bracketright
# 	bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` {+,-} 20 ))
# 
# ctrl + {_, shift} + bracketleft
# 	bspc config -d focused top_padding $((`bspc config -d focused top_padding` {+,-} 20 ))
# 
# alt + shift + {minus,equal}
# 	bspc config -d focused right_padding $((`bspc config -d focused right_padding` {+,-} 20 )); \
# 	bspc config -d focused left_padding $((`bspc config -d focused left_padding` {+,-} 20 )); \
# 	bspc config -d focused bottom_padding $((`bspc config -d focused bottom_padding` {+,-} 20 )); \
# 	bspc config -d focused top_padding $((`bspc config -d focused top_padding` {+,-} 20 ));
# 
# 
# # Change window gap
# alt + {minus,equal}
# 	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
# 
# # Set splitting ratio of windows
# alt + ctrl + {1-9}
# 	bspc window -r 0.{1-9}
# 
# # Focus or move window to desktops
# alt + {_,shift + }{1-9,0}
#     bspc {desktop -f, window -d} $(bspc query -M -m)/{i,ii,iii,iv,v,vi,vii,viii,ix,x}
# 
# # Move or resize window
# alt + button{1-3}
# 	bspc pointer -g {move,resize_side,resize_corner}
# 
# # Needed for ^^^^
# alt + !button{1-3}
#     bspc pointer -t %i %i
# 
# 
# super + @button{1-3}
#     bspc pointer -u
# 
# Print
# 	scrot -q 100
# XF86WebCam
# 	sed -i 's/card [0-9]/card {0,1}/' $HOME/.asoundrc
# # make sxhkd reload its configuration files:

# -------------------------------------------------------------------------------------
# --[[ RESTART ]]----------------------------------------
# ---------------
# kpress("M4+apostrophe", "notioncore.restart()"),
super + apostrophe
    {/usr/bin/notionflux -e 'notioncore.restart()' && pkill -USR1 -x sxhkd && pkill sxhkd && sxhkd} &

# -------------------------------------------------------------------------------------
# --[[  PLAYER CONTROL ]]---------------------------------
# -----------------------
# kpress("XF86AudioPrev",        "notioncore.exec_on(_, 'mpc prev')"),
# kpress("XF86AudioNext",        "notioncore.exec_on(_, 'mpc next')"),
# kpress("XF86AudioPlay",        "notioncore.exec_on(_, 'mpc toggle')"),
# kpress("XF86AudioStop",        "notioncore.exec_on(_, 'mpc stop')"),
# kpress("XF86AudioLowerVolume", "notioncore.exec_on(_, 'mpc volume -1')"),
# kpress("XF86AudioRaiseVolume", "notioncore.exec_on(_, 'mpc volume +1')"),
# kpress("M4+Ct+T",              "notioncore.exec_on(_, 'dipser -S')"),
# kpress("M4+8",                 "notioncore.exec_on(_, 'mpc volume 0 || amixer -q set Master 0% mute')"),
# kpress("M4+8+Sh",              "notioncore.exec_on(_, 'mpc volume 100 || amixer -q set Master 100% unmute ')"),

XF86AudioPrev
    mpc prev
XF86AudioNext
    mpc next
XF86AudioPlay
    mpc toggle
XF86AudioStop
    mpc stop
XF86AudioLowerVolume
    mpc volume -1
XF86AudioRaiseVolume
    mpc volume +1
super + control + t
    dipser -S
super + 8
    mpc volume 0 || amixer -q set Master 0% mute
super + shift + 8
    mpc volume 100 || amixer -q set Master 100% unmute 
