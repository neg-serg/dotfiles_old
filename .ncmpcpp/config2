####################################################
## this is example configuration file, copy it to ##
## ~/.ncmpcpp/config and set up your preferences  ##
####################################################
#
##### connection settings #####
#
mpd_connection_timeout = "5"
#
#mpd_crossfade_time = "5"
#
##### music visualizer #####
##
## Note: In order to make music visualizer work you'll
## need to use mpd fifo output, whose format parameter
## has to be set to 44100:16:1. Example configuration:
## (it has to be put into mpd.conf)
##
## audio_output {
##        type            "fifo"
##        name            "My FIFO"
##        path            "/tmp/mpd.fifo"
##        format          "44100:16:1"
## }
##
#
#visualizer_fifo_path = ""
#
##
## Note: To enable spectrum frequency visualization
## you need to compile ncmpcpp with fftw3 support.
##
#
#visualizer_type = "wave" (spectrum/wave)
#
##### system encoding #####
##
## ncmpcpp should detect your charset encoding
## but if it failed to do so, you can specify
## charset encoding you are using here.
##
## Note: You can see whether your ncmpcpp build
## supports charset detection by checking output
## of `ncmpcpp --version`.
##
## Note: Since MPD uses utf8 by default, setting
## this option makes sense only if your encoding
## is different.
##
#
#system_encoding = ""
#
##### delays #####
#
## delay after playlist highlighting will be disabled (0 = don't disable)
#
playlist_disable_highlight_delay = "5"
#
## defines how long various messages are supposed to be visible
#
message_delay_time = "4"
#
##### song format #####
##
## for song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %t - title
## %b - album
## %y - year
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## $R - begin right alignment
##
## you can also put them in { } and then it will be displayed
## only if all requested values are available and/or define alternate
## value with { }|{ } eg. {%a - %t}|{%f}
##
## Note: Format that is similar to "%a - %t" (i.e. without any additional
## braces) is equal to "{%a - %t}", so if one of the tags is missing,
## you'll get nothing.
##
## text can also have different color than the main window has,
## eg. if you want length to be green, write $3%l$9
##
## available values:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
##
## Note: colors can be nested.
##
#
song_list_format = "{%a - }{%t}|{$5%f$9}$R{$7(%l)$9}"
#
#song_status_format = "{{%a{ \"%b\"{ (%y)}} - }{%t}}|{%f}"
song_status_format = "{{%a{ \"%t\"}} }"
#
#song_library_format = "{%n - }{%t}|{%f}"
#
#tag_editor_album_format = "{(%y) }%b"
#
##
## Note: Below variables are for alternative version of user's interface.
## Their syntax supports all tags and colors listed above plus some extra
## markers used for text attributes. They are followed by character '$'.
## After that you can put:
##
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use an attribute anymore, just put it again, but
## this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename
## with reversed colors.
##
#
#alternative_header_first_line_format = "$b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b"
#
#alternative_header_second_line_format = "{{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}"
#
##
## Note: Below variables also supports
## text attributes listed above.
##
#
#now_playing_prefix = "$b"
#
#now_playing_suffix = "$/b"
#
#browser_playlist_prefix = "$2playlist$9 "
#
#selected_item_prefix = "$6"
#
#selected_item_suffix = "$9"
#
## colors are not supported for below variable
#
#song_window_title_format = "{%a - }{%t}|{%f}"
#
##### columns settings #####
##
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of column)[column's color]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real column's
## width will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one, type [])
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## E.g. {lr} will give you right aligned column of lengths.
##
#
song_columns_list_format = "(5f)[black]{l} (42)[green]{t} (28)[cyan]{a} (30)[blue]{b}"
#
##### various settings #####
#
##
## Note: Custom command that will be executed each
## time song changes. Useful for notifications etc.
##
## Attention: It doesn't support song format anymore.
## Use `ncmpcpp --now-playing SONG_FORMAT` instead.
##
#
#playlist_show_remaining_time = "no"
#
playlist_display_mode = "columns" (classic/columns)
#
browser_display_mode = "columns" (classic/columns)
#
#search_engine_display_mode = "classic" (classic/columns)
#
#incremental_seeking = "yes"
#
#seek_time = "1"
#
#autocenter_mode = "no"
#
progressbar_look = "‚ñç  "
#
#default_place_to_search_in = "database" (database/playlist)
#
user_interface = "classic" (classic/alternative)
#
media_library_left_column = "a" (possible values: a,y,g,c,p, legend above)
#
#default_find_mode = "wrapped" (wrapped/normal)
#
#default_space_mode = "add" (add/select)
#
#default_tag_editor_left_col = "albums" (albums/dirs)
#
#default_tag_editor_pattern = "%n - %t"
#
header_visibility = "no"
#
statusbar_visibility = "no"
#
#header_text_scrolling = "yes"
#
fancy_scrolling = "yes"
#
#cyclic_scrolling = "no"
#
#lines_scrolled = "2"
#
#follow_now_playing_lyrics = "no"
#
#ncmpc_like_songs_adding = "no" (enabled - add/remove, disabled - always add)
#
#show_hidden_files_in_local_browser = "no"
#
#display_screens_numbers_on_start = "yes"
#
#jump_to_now_playing_song_at_start = "yes"
#
#ask_before_clearing_main_playlist = "no"
#
#clock_display_seconds = "no"
#
#display_bitrate = "no"
#
#display_remaining_time = "no"
#
#regular_expressions = "basic" (basic/extended)
#
##
## Note: If below is enabled, ncmpcpp will ignore leading
## "The" word while sorting items in browser, tags in
## media library, etc.
##
ignore_leading_the = "yes"
#
#block_search_constraints_change_if_items_found = "yes"
#
#mouse_support = "yes"
#
empty_tag_marker = ""
#
enable_window_title = "yes"
#
##
## Note: These triggers will allow you to phisically remove
## files and directories from your hdd in using ncmpcpp's
## browser screen.
##
#
#allow_physical_files_deletion = "no"
#
#allow_physical_directories_deletion = "no"
#
##### lyrics support #####
##
## supported lyrics databases:
##
## - 1 - lyricsplugin.com
##
#
#lyrics_database = "1"
#
#external_editor = ""
#
#use_console_editor = "no" (set to yes, if your editor is console app)
#
##### colors definitions #####
#
colors_enabled = "yes"
#
#empty_tag_color = "cyan"
#
#header_window_color = "default"
#
#volume_color = "default"
#
state_line_color = "blue"
#
state_flags_color = "blue"
#
main_window_color = "cyan"
#
color1 = "cyan"
#
color2 = "blue"
#
main_window_highlight_color = "cyan"
#
progressbar_color = "black"
#
statusbar_color = "cyan"
#
#alternative_ui_separator_color = "black"
#
active_column_color = "cyan"
#
#window_border_color = "green"
#
#active_window_border = "red"
#
