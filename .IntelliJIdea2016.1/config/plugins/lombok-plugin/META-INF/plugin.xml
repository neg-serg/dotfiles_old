<idea-plugin version="2" url="https://github.com/mplushnikov/lombok-intellij-plugin">
  <id>Lombook Plugin</id>
  <name>Lombok Plugin</name>
  <vendor url="https://github.com/mplushnikov/lombok-intellij-plugin" email="lombokplugin@plushnikov.de">Michail Plushnikov</vendor>
  <version>0.13.16</version>
  <idea-version since-build="145.00"/>
  <description>
      &lt;h1&gt;IntelliJ Lombok plugin&lt;/h1&gt;
      &lt;br/&gt;
      &lt;a href="https://github.com/mplushnikov/lombok-intellij-plugin"&gt;GitHub&lt;/a&gt; |
      &lt;a href="https://github.com/mplushnikov/lombok-intellij-plugin/issues"&gt;Issues&lt;/a&gt; | Donate (
      &lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=3F9HXD7A2SMCN"&gt;PayPal&lt;/a&gt; )
      &lt;br/&gt;
      &lt;br/&gt;

      &lt;b&gt;A plugin that adds first-class support for Project Lombok&lt;/b&gt;
      &lt;br/&gt;
      &lt;br/&gt;

      &lt;b&gt;Features&lt;/b&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/GetterSetter.html"&gt;@Getter and @Setter&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/ToString.html"&gt;@ToString&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/EqualsAndHashCode.html"&gt;@EqualsAndHashCode&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Constructor.html"&gt;@AllArgsConstructor, @RequiredArgsConstructor and @NoArgsConstructor&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Log.html"&gt;@Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog, @JBossLog&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Data.html"&gt;@Data&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Builder.html"&gt;@Builder&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Builder.html#singular"&gt;@Singular&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Delegate.html"&gt;@Delegate&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/Value.html"&gt;@Value&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/Accessors.html"&gt;@Accessors&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/Wither.html"&gt;@Wither&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/SneakyThrows.html"&gt;@SneakyThrows&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/val.html"&gt;from Intellij 14.1 @val&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/UtilityClass.html"&gt;from Intellij 2016.2 @UtilityClass&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://projectlombok.org/features/configuration.html"&gt;Lombok config system&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;Code inspections&lt;/li&gt;
        &lt;li&gt;Refactoring actions (lombok and delombok)&lt;/li&gt;
      &lt;/ul&gt;
      &lt;br/&gt;
    </description>
  <category>Tools Integration</category>
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>
  <application-components>
    <component>
      <implementation-class>de.plushnikov.intellij.plugin.LombokPluginApplicationComponent</implementation-class>
    </component>
  </application-components>
  <project-components>
    <component>
      <implementation-class>de.plushnikov.intellij.plugin.LombokPluginUpdateProjectComponent</implementation-class>
      <implementation-class>de.plushnikov.intellij.plugin.LombokPluginProjectValidatorComponent</implementation-class>
    </component>
  </project-components>
  <extensionPoints>
    <extensionPoint name="processor" interface="de.plushnikov.intellij.plugin.processor.Processor"/>
    <extensionPoint name="modifierProcessor" interface="de.plushnikov.intellij.plugin.processor.modifier.ModifierProcessor"/>
  </extensionPoints>
  <extensions defaultExtensionNs="com.intellij">
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.BuilderHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.DelegateHandler"/>
    <projectService serviceImplementation="de.plushnikov.intellij.plugin.provider.LombokProcessorProvider"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.lombokconfig.ConfigDiscovery"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.settings.LombokSettings"/>
    <lang.psiAugmentProvider implementation="de.plushnikov.intellij.plugin.provider.LombokAugmentProvider"/>
    <implicitUsageProvider implementation="de.plushnikov.intellij.plugin.provider.LombokImplicitUsageProvider"/>
    <inspectionToolProvider implementation="de.plushnikov.intellij.plugin.provider.LombokInspectionProvider"/>
    <projectConfigurable instance="de.plushnikov.intellij.plugin.settings.ProjectSettingsPage"/>
    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameHandler" order="FIRST"/>
    <treeGenerator implementation="de.plushnikov.intellij.plugin.extension.LombokLightMethodTreeGenerator"/>
    <lang.structureViewExtension implementation="de.plushnikov.intellij.plugin.extension.LombokStructureViewExtension"/>
    <daemon.highlightInfoFilter implementation="de.plushnikov.intellij.plugin.extension.LombokHighlightErrorFilter"/>
    <fileTypeFactory implementation="de.plushnikov.intellij.plugin.language.LombokConfigFileTypeFactory"/>
    <lang.parserDefinition language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigParserDefinition"/>
    <lang.syntaxHighlighterFactory key="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="de.plushnikov.intellij.plugin.language.LombokConfigColorSettingsPage"/>
    <completion.contributor language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCompletionContributor"/>
    <lang.commenter language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCommentor"/>
    <fileBasedIndex implementation="de.plushnikov.intellij.plugin.lombokconfig.LombokConfigIndex"/>
    <custom.exception.handler implementation="de.plushnikov.intellij.plugin.handler.SneakyThrowsExceptionHandler"/>
    <findUsagesHandlerFactory implementation="de.plushnikov.intellij.plugin.extension.LombokFieldFindUsagesHandlerFactory"/>
    <renamePsiElementProcessor implementation="de.plushnikov.intellij.plugin.extension.LombokRenameFieldReferenceProcessor"/>
    <java.elementFinder implementation="de.plushnikov.intellij.plugin.extension.LombokElementFinder" order="last"/>
    <localInspection groupPath="Java" language="JAVA" shortName="Convert2Diamond" displayName="Explicit type can be replaced with &lt;&gt;" groupName="Java language level migration aids" enabledByDefault="true" level="WARNING" implementationClass="de.plushnikov.intellij.plugin.inspection.LombokExplicitTypeCanBeDiamondInspection" order="last"/>
  </extensions>
  <extensions defaultExtensionNs="Lombook Plugin">
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.AllArgsConstructorProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.NoArgsConstructorProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.RequiredArgsConstructorProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.LogProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4j2Processor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.Slf4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.XSlf4jProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.CommonsLogProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.log.JBossLogProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.DataProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.EqualsAndHashCodeProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.GetterProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.SetterProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.ToStringProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.WitherProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassMethodProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderClassProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.method.BuilderClassMethodProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.ValueProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.clazz.UtilityClassProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor"/>
    <processor implementation="de.plushnikov.intellij.plugin.processor.method.DelegateMethodProcessor"/>
    <processor implementation="pl.mg6.hrisey.intellij.plugin.processor.clazz.ParcelableMethodsProcessor"/>
    <processor implementation="pl.mg6.hrisey.intellij.plugin.processor.clazz.ParcelableFieldsProcessor"/>
    <modifierProcessor implementation="de.plushnikov.intellij.plugin.processor.modifier.ValueModifierProcessor"/>
    <modifierProcessor implementation="de.plushnikov.intellij.plugin.processor.modifier.ValModifierProcessor"/>
    <modifierProcessor implementation="de.plushnikov.intellij.plugin.processor.modifier.UtilityClassModifierProcessor"/>
    <modifierProcessor implementation="de.plushnikov.intellij.plugin.processor.modifier.FieldDefaultsModifierProcessor"/>
  </extensions>
  <actions>
    <group id="LombokActionGroup" text="Lombok" description="Refactor code with lombok annotations" icon="/icons/lombok.png" popup="true">
      <action id="defaultLombokData" class="de.plushnikov.intellij.plugin.action.lombok.LombokDataAction" text="Default @Data" description="Action to replace getter/setter/equals/hashcode/toString methods with lombok @Data annotation"/>
      <separator/>
      <action id="defaultLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokGetterAction" text="Default @Getter" description="Action to replace all getter methods with lombok @Getter annotation"/>
      <action id="defaultLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokSetterAction" text="Default @Setter" description="Action to replace all setter methods with lombok @Setter annotation"/>
      <action id="defaultLombokEqualsAndHashcode" class="de.plushnikov.intellij.plugin.action.lombok.LombokEqualsAndHashcodeAction" text="Default @EqualsAndHashcode" description="Action to replace equals and hashcode methods with lombok @EqualsAndHashcode annotation"/>
      <action id="defaultLombokToString" class="de.plushnikov.intellij.plugin.action.lombok.LombokToStringAction" text="Default @ToString" description="Action to replace toString method with lombok @ToString annotation"/>
      <separator/>
      <action id="defaultLombokLogger" class="de.plushnikov.intellij.plugin.action.lombok.LombokLoggerAction" text="@Log (and friends)" description="Action to replace logger with lombok @Log annotation"/>
      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
    <group id="DelombokActionGroup" text="Delombok" description="Refactor code removing lombok annotations" icon="/icons/delombok.png" popup="true">
      <action id="delombokAny" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEverythingAction" text="All lombok annotations" description="Action to replace all lombok annotations with vanilla java methods"/>
      <separator/>
      <action id="delombokData" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDataAction" text="@Data" description="Action to replace lombok @Data annotation with vanilla java methods"/>
      <action id="delombokValue" class="de.plushnikov.intellij.plugin.action.delombok.DelombokValueAction" text="@Value" description="Action to replace lombok @Value annotation with vanilla java methods"/>
      <action id="delombokWither" class="de.plushnikov.intellij.plugin.action.delombok.DelombokWitherAction" text="@Wither" description="Action to replace lombok @Wither annotation with vanilla java methods"/>
      <action id="delombokDelegate" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDelegateAction" text="@Delegate" description="Action to replace lombok @Delegate annotation with vanilla java methods"/>
      <action id="delombokBuilder" class="de.plushnikov.intellij.plugin.action.delombok.DelombokBuilderAction" text="@Builder" description="Action to replace lombok @Builder annotation with vanilla java methods"/>
      <separator/>
      <action id="delombokConstructor" class="de.plushnikov.intellij.plugin.action.delombok.DelombokConstructorAction" text="@Constructors" description="Action to replace lombok @NoArgsConstructor, @RequiredArgsConstructor and @AllArgsConstructor annotations with vanilla java methods"/>
      <action id="delombokGetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokGetterAction" text="@Getter" description="Action to replace lombok @Getter annotation with vanilla getter methods"/>
      <action id="delombokSetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSetterAction" text="@Setter" description="Action to replace lombok @Setter annotation with vanilla setter methods"/>
      <action id="delombokEqualsAndHashCode" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEqualsAndHashCodeAction" text="@EqualsAndHashCode" description="Action to replace lombok @EqualsAndHashCode annotation with vanilla java methods"/>
      <action id="delombokToString" class="de.plushnikov.intellij.plugin.action.delombok.DelombokToStringAction" text="@ToString" description="Action to replace lombok @ToString annotation with vanilla java methods"/>
      <separator/>
      <action id="delombokLogger" class="de.plushnikov.intellij.plugin.action.delombok.DelombokLoggerAction" text="@Log (and friends)" description="Action to replace lombok @Log (and other) annotation with vanilla log field"/>
      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
  </actions>
  <change-notes>
		&lt;ul&gt;
		&lt;li&gt;0.13
				&lt;ol&gt;
            &lt;li&gt;Fixed #226: @Setter(AccessLevel.NONE) triggers error and not just warning on final fields&lt;/li&gt;
            &lt;li&gt;Fixed #254: Properties from lombok.config does not involve on suggestion list&lt;/li&gt;
            &lt;li&gt;Fixed #259: Support JBoss Logging (new in Lombok 1.16.10)&lt;/li&gt;
            &lt;li&gt;Fixed #262: When lombok.accessors.chain=true setters show void return value&lt;/li&gt;
            &lt;li&gt;Fixed #268: Lombok Dependency is possible outdated' message even when 'Enable lombok version warning' is unchecked.&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.12
				&lt;ol&gt;
				     &lt;li&gt;Added support for transparent changing of visibility of existing fields and variables for IntelliJ 2016.2&lt;/li&gt;
				     &lt;li&gt;Fixed #56: Missing auto-generated modifiers on fields and class shown in the "Structure" window when using `@Value`&lt;/li&gt;
				     &lt;li&gt;Fixed #137: Private visibility added by @Value not respected by IDE.&lt;/li&gt;
				     &lt;li&gt;Fixed #143: Support UtilityClass&lt;/li&gt;
				     &lt;li&gt;Fixed #147: @FieldDefaults(makeFinal = true) and bitwise operators produce an error message&lt;/li&gt;
				     &lt;li&gt;Fixed #158: val causes intellij to show an invalid error when used alongside an anonymous class&lt;/li&gt;
				     &lt;li&gt;Fixed #202: @Builder supports setter for final field (@Value)&lt;/li&gt;
				     &lt;li&gt;Fixed #230: @Value / @EqualsAndHashCode callSuper false warning: lombok.config ignored&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.11
				&lt;ol&gt;
				     &lt;li&gt;Fixed #153: Configuration keys&lt;/li&gt;
				     &lt;li&gt;Fixed #125: Support for lombok.getter.noIsPrefix&lt;/li&gt;
				     &lt;li&gt;Fixed #128: Support @Slf4j with custom logger name&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.10
				&lt;ol&gt;
				     &lt;li&gt;Overall significant performance optimizations&lt;/li&gt;
				     &lt;li&gt;Fixed #88: Delegating to class with generics using @Delegate annotation &lt;/li&gt;
				     &lt;li&gt;Fixed #136: "Cannot infer arguments" with @RequiredArgsConstructor &lt;/li&gt;
				     &lt;li&gt;Fixed #157: Intellij fails to infer type for constructor defined with @RequiredArgsConstructor &lt;/li&gt;
				     &lt;li&gt;Fixed #176: Unchecked warning when using static constructor for @Data and @Value on parametrized class&lt;/li&gt;
             &lt;li&gt;Fixed #180: Low performance of @Builder analysis&lt;/li&gt;
             &lt;li&gt;Fixed #184: Linter suggests to add @EqualsAndHashCode to declare callSuper, but already overriden&lt;/li&gt;
             &lt;li&gt;Fixed #105: val sometimes fails to be parsed correctly&lt;/li&gt;
				     &lt;li&gt;Fixed #142: IDE highlights val as an error if it had reparsed code before the line was completed&lt;/li&gt;
				     &lt;li&gt;Fixed #168: val does not work with generic method calls as the initializer expression&lt;/li&gt;
				     &lt;li&gt;Fixed #180: Low performance of @Builder analysis&lt;/li&gt;
				     &lt;li&gt;Fixed #183: val can not work when method has Generic return&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.8
				&lt;ol&gt;
				     &lt;li&gt;Fixed #151: Builder issues with Accessors&lt;/li&gt;
				     &lt;li&gt;Fixed #153: IntelliJ produces warning when specifying generic type on val declaration&lt;/li&gt;
				     &lt;li&gt;Fixed #156: Exception in @Singular handling&lt;/li&gt;
				     &lt;li&gt;Fixed #165: Can't correctly resolve multiple @Builder methods in same class having partial implementations&lt;/li&gt;
				     &lt;li&gt;Fixed #172: "Lombok needs a default constructor in the base class" error in enum&lt;/li&gt;
				     &lt;li&gt;Fixed #175: Added support for @Tolerate for @Getter and @Setter&lt;/li&gt;
				     &lt;li&gt;Fixed #177: Null pointer in intellij version 15.0.3&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.7
				&lt;ol&gt;
				    &lt;li&gt;Added caching of produced PsiElements to reduce probability of recursive invocation #112,#123, #126, #129&lt;/li&gt;
				    &lt;li&gt;Fixed #130: @XArgsConstructor don't show error when used on a subclass that requires non-empty super call&lt;/li&gt;
				    &lt;li&gt;Fixed #132: Make @EqualsAndHashCode(callSuper = true) default&lt;/li&gt;
				    &lt;li&gt;Fixed #135: Added support for @NoArgsConstructor(force = true)&lt;/li&gt;
				    &lt;li&gt;Fixed #149: Idea cannot generate another constructor when @NoArgsConstructor is used&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.6
				&lt;ol&gt;
				    &lt;li&gt;Fixed #47: Feature request: support onX annotations via @__&lt;/li&gt;
				    &lt;li&gt;Fixed #77: Support new @Singular annotation for @Builder collection fields&lt;/li&gt;
				    &lt;li&gt;Fixed #123: SpinAllocator has exhausted! Too many threads or you're going to get StackOverflow&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.5
				&lt;ol&gt;
				    &lt;li&gt;Fixed #48: Importing @Builder generated builder classes does not work&lt;/li&gt;
				    &lt;li&gt;Added #77: Basic Support for new @Singular annotation for @Builder collection fields&lt;/li&gt;
				    &lt;li&gt;Fixed #111: @Builder on constructors/methods is not recognized in Android Studio&lt;/li&gt;
				    &lt;li&gt;Fixed #116: @Builder - Builder class can't be found without a static import&lt;/li&gt;
				    &lt;li&gt;Added Hrisey @Parcelable support patch&lt;/li&gt;
				    &lt;li&gt;Dropped outdated support for some lombok_pg annotations&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.4
				&lt;ol&gt;
				    &lt;li&gt;Fixed regression #108: Getter/Setter wrong after last Update&lt;/li&gt;
				    &lt;li&gt;Fixed #100, #72: AssertionError: Stub and PSI element type mismatch&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.9.3
				&lt;ol&gt;
				    &lt;li&gt;Fixed #95: Fluent Setter Override Error&lt;/li&gt;
				    &lt;li&gt;Fixed #96: @Value and @Wither not playing well together&lt;/li&gt;
				    &lt;li&gt;Fixed #97: Two constructors being shown when using @Builder and @AllArgsConstructor together&lt;/li&gt;
				    &lt;li&gt;Fixed #98: Plugin crash: IndexNotReadyException val processing&lt;/li&gt;
				    &lt;li&gt;Fixed #101: @SneakyThrows causes incorrect errors in IntelliJ 14&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.9.2
				&lt;ol&gt;
				    &lt;li&gt;Added #9:  Basic val support in IntelliJ 14.1&lt;/li&gt;
				    &lt;li&gt;Fixed #81: @Builder: buildMethod should have same throws-list as annotated static method&lt;/li&gt;
				    &lt;li&gt;Fixed #82: Abstract Class + @Delegate&lt;/li&gt;
				    &lt;li&gt;Fixed #83: Getting inconvertible types error assigning new builder instance&lt;/li&gt;
				    &lt;li&gt;Fixed #84: Properly find usages of @Getters &amp; @Setters on fields with @Acccessor prefixes&lt;/li&gt;
				    &lt;li&gt;Fixed #90: Renaming a field with different case doesn't rename getter&lt;/li&gt;
				    &lt;li&gt;Fixed #92: Improved @Wither support&lt;/li&gt;
				    &lt;li&gt;Fixed #93: IntelliJ unable to resolve constructor when using @Builder and @Value together&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.9.1
				&lt;ol&gt;
				    &lt;li&gt;Fixed #33: Builder annotation with partial implementation shows errors&lt;/li&gt;
				    &lt;li&gt;Fixed #78: Support for constructors of @Value objects with assigned final fields&lt;/li&gt;
				    &lt;li&gt;Fixed #79: Support for multiple @Builder in same java class&lt;/li&gt;
				    &lt;li&gt;Fixed #80: Some issues with "delomboked" @Builder on static method&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.9.0
				&lt;ol&gt;
				    &lt;li&gt;Added Delombok Feature for @Builder&lt;/li&gt;
				    &lt;li&gt;Issue #53: Basic Support for Lombok configuration keys&lt;/li&gt;
				    &lt;li&gt;Fixed #57: Incorrect constructors appear in "Structure" when `@Value` and `@Builder`&lt;/li&gt;
				    &lt;li&gt;Fixed #70: Conflict resolution failed on renaming field together with its accessors in IntelliJ 14&lt;/li&gt;
				    &lt;li&gt;Issue #74: Fixed (only IntelliJ 14+) Sneaky Throws Not Correctly Detected for Anonymous Inner Class &lt;/li&gt;
						&lt;li&gt;Issue #75: Added support for @lombok.Builder (lombok version 1.16)&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.8.9
				&lt;ol&gt;
				    &lt;li&gt;Fixed #67: Updates and Improvements for IntelliJ 14, fixed incompatibility&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.8.8
				&lt;ol&gt;
				    &lt;li&gt;Fixed #52 : Invalid stub element type in index&lt;/li&gt;
				    &lt;li&gt;Fixed #54 : @Wither copies @Nullable annotation to generated method&lt;/li&gt;
				    &lt;li&gt;Fixed #62 : Intellij shows error on Lazy Getter&lt;/li&gt;
				    &lt;li&gt;Fixed #63 : Added support for @Tolerate (together with @Value, @Data)&lt;/li&gt;
				    &lt;li&gt;Fixed issue 109(on GoogleCode): Intellij freezes regularly when the lombok plugin is enabled&lt;/li&gt;
				    &lt;li&gt;Fixed issue 106(on GoogleCode): Static methods annotated with @Builder are not recognized&lt;/li&gt;
				    &lt;li&gt;Updated to lombok changes: canEqual (of @EqualsAndHashCode fame) should be protected instead of public.&lt;/li&gt;
				    &lt;li&gt;Basic autocompletion and highlighting for lombok.config files&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.7
				&lt;ol&gt;
				    &lt;li&gt;Fixed issue 104(on GoogleCode):	Intellij reports unused field with @Getter and @Setter&lt;/li&gt;
				    &lt;li&gt;Fixed #50 : @SneakyThrows does not work for try-with-resource statements&lt;/li&gt;
				    &lt;li&gt;Fixed #51 : Delegate annotation moved to experimental&lt;/li&gt;
				    &lt;li&gt;Fixed #58 : NoSuchMethodError in IntelliJ 14 EAP&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.6
				&lt;ol&gt;
				    &lt;li&gt;Added basic refactoring actions for Lombok @Data, @ToString and @EqualsAndHashcode methods&lt;/li&gt;
				    &lt;li&gt;Fixed #46 : @SneakyThrows does not work on methods which throws multiple exceptions&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.5
				&lt;ol&gt;
				    &lt;li&gt;Fixed #44 : @SneakyThrows doesn't hide exception on Intellij13&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.4
				&lt;ol&gt;
				    &lt;li&gt;Fixed #20 : Inspection of lombok annotations say I can't use @Builder on constructor&lt;/li&gt;
				    &lt;li&gt;Fixed issue 92(on Googlecode) : Plugin flags @Builder annotations when they are placed on contructors&lt;/li&gt;
				    &lt;li&gt;Fixed #41 : Error with @Builder &lt;/li&gt;
				    &lt;li&gt;Fixed #42 : Added Extension to populate Structure view&lt;/li&gt;
				    &lt;li&gt;Fixed issue 13(on GoogleCode): @SneakyThrows does not hide Unhandled Exception Error&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.3
				&lt;ol&gt;
				    &lt;li&gt;Fixed #17: Cyclic parent child relation&lt;/li&gt;
				    &lt;li&gt;Fixed #34: Lombok plugin crashes&lt;/li&gt;
				    &lt;li&gt;Fixed #36: Possible class cast exception&lt;/li&gt;
				    &lt;li&gt;Fixed #37: Delombok of files included as library failes&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.2
				&lt;ol&gt;
				    &lt;li&gt;Added support for "topic" annotation value of all @Log annotations (Lombok &gt;= 1.12.6)&lt;/li&gt;
				    &lt;li&gt;Added validation of static fields/methods of @Delegate annotation (@Delegate is legal only on instance fields or no-argument instance methods)&lt;/li&gt;
				    &lt;li&gt;Fixed #19: Slf4j in static context&lt;/li&gt;
				    &lt;li&gt;Fixed #29: Renaming a class with the @Log* annotation adds extra qualification to calls&lt;/li&gt;
				    &lt;li&gt;Fixed #31: Prevent errors with invalid identifiers for builderClassName in @Builder annotation&lt;/li&gt;
				    &lt;li&gt;Fixed #32: Refactor -&gt; Extract -&gt; Parameter Object || Change Signature broken&lt;/li&gt;
				    &lt;li&gt;Fixed (on GoogleCode) #83: @Slf4j does not work when added for first time&lt;/li&gt;
				    &lt;li&gt;Fixed (on GoogleCode) #100:	Refactor Change Signature || Extract - Parameter Object&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.1
				&lt;ol&gt;
				    &lt;li&gt;Issue (on Git) #23: Fixed @Delegate inspection reports error&lt;/li&gt;
				    &lt;li&gt;Issue (on Git) #27: Fixed @Delegate on a type parameter doesn't fail&lt;/li&gt;
				    &lt;li&gt;Issue #60: Fixed @Delegate on methods is not supported now&lt;/li&gt;
				    &lt;li&gt;Issue #98: Fixed Lombok Experimental Accessor Prefix does not handle non-alphanumeric prefixes&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.8.0
				&lt;ol&gt;
				    &lt;li&gt;Added refactoring action for Lombok @Log and friends, @Getter and @Setter methods&lt;/li&gt;
				    &lt;li&gt;Added refactoring actions to Delombok @Data, @Value, @Wither, @Constructors, @Getter, @Setter, @EqualsAndHashCode, @ToString and @Log annotations&lt;/li&gt;
				    &lt;li&gt;Fixed problem with renaming fields in class containing lombok @Getter and @Setter&lt;/li&gt;
				    &lt;li&gt;Issue #94: Fixed Intellij does not correctly create the constructor with @RequiredAllConstructor for classes with @Value&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.7.3
				&lt;ol&gt;
				    &lt;li&gt;Fix IllegalArgumentException when trying to expand method names on IntelliJ 11&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;li&gt;0.7.2
				&lt;ol&gt;
				    &lt;li&gt;Fix multiple stackoverflow exceptions&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		 &lt;li&gt;0.7.1
				&lt;ol&gt;
				    &lt;li&gt;Some performance optimizations&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.7
				&lt;ol&gt;
				    &lt;li&gt;Added partial support for @Value lombok annotations&lt;/li&gt;
				    &lt;li&gt;Added support for @Accessors lombok experimental annotation&lt;/li&gt;
				    &lt;li&gt;Added support for @Wither lombok experimental annotation&lt;/li&gt;
				    &lt;li&gt;Added support for @Builder lombok experimental annotations&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.6.5
				&lt;ol&gt;
				    &lt;li&gt;Issue #20	Fixed Using @Delegate together with generic methods produced red underlining in the editor window&lt;/li&gt;
				    &lt;li&gt;Issue #29	Fixed @Delegate leads to exception in LombokLightParameter&lt;/li&gt;
				    &lt;li&gt;Issue #37 and #59	Fixed @EqualsAndHashCode inspection for callSuper parameter&lt;/li&gt;
				    &lt;li&gt;Issue #54	Valid code produces inspections errors - anonymous instance, partial implementation&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.6.4
				&lt;ol&gt;
				    &lt;li&gt;Issue #49	Deprecated fields should generate deprecated methods&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.6.3
				&lt;ol&gt;
				    &lt;li&gt;Issue #41 Added support for XSlf4j and Log4j2 logger&lt;/li&gt;
				    &lt;li&gt;Issue #44 Fixed Getter- and Setter- method generation, when method is already there with a parameter(s)&lt;/li&gt;
				    &lt;li&gt;Issue #56	Removed obsolete plugin dependencies (they have been merged into intellij core)&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.6.2
				&lt;ol&gt;
				    &lt;li&gt;Issue #50 Compiled with java 1.7 -&gt; Don't work under java 1.6 vms&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.6
				&lt;ol&gt;
				    &lt;li&gt;Issue #23 Updated to run with IntelliJ 12&lt;/li&gt;
				    &lt;li&gt;Issue #42 IllegalArgumentException with Intellij 12&lt;/li&gt;
				    &lt;li&gt;Issue #48 IllegalArgumentException with Intellij 12&lt;/li&gt;
				    &lt;li&gt;Issue #38 Added ability to enable/disable lombok-intellij-plugin per project-configuration
				    and reduced logging-level of plugin&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.5
				&lt;ol&gt;
				    &lt;li&gt;Issue #23 Initial support for IntelliJ 12&lt;/li&gt;
				    &lt;li&gt;Issue #12 Added support for "Singleton" and "EnumId" annotations from lombok-pg&lt;/li&gt;
				    &lt;li&gt;Fixed Issue #27 "@EqualsAndHashCode on final classes: Should not have a canEquals in that case."&lt;/li&gt;
				    &lt;li&gt;Fixed Issue #28 "Getters and setters should be generated even if the method exists with different parameter count"&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		  &lt;li&gt;0.4
				&lt;ol&gt;
				    &lt;li&gt;fix reflection access for intellij ultimate&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.3
				&lt;ol&gt;
            &lt;li&gt;Fixed issue #4 "Getter/Setter on generic types"&lt;/li&gt;
            &lt;li&gt;Fixed issue #6 "The Plugin panel in IDEA lists the plugin as "Lombook Plugin (doubled letter 'o')"&lt;/li&gt;
            &lt;li&gt;Fixed issue #7 "Added support for IntelliJ 11"&lt;/li&gt;
            &lt;li&gt;Fixed issue #9 "@Data(staticConstructor="of") is not created"&lt;/li&gt;
            &lt;li&gt;Fixed issue #10 "Empty constructor is created even if it already exists"&lt;/li&gt;
            &lt;li&gt;Fixed issue #15 "@Data with @NoArgsConstructor does not generate default constructor"&lt;/li&gt;
            &lt;li&gt;Fixed issue #17 "Incompatibility with javax.annotation.Nonnull/Nullable"&lt;/li&gt;
            &lt;li&gt;Added more inspections and QuickFixes for some of lombok annotations.&lt;/li&gt;
            &lt;li&gt;Fixed: skip constructor generation for @Data if some constructor is already defined in the class&lt;/li&gt;
            &lt;li&gt;Fixed: skip getter generation for invalid lazy-getters&lt;/li&gt;
            &lt;li&gt;Added support for "LazyGetter" and "FluentSetter" annotations from lombok-pg&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.2
				&lt;ol&gt;
					&lt;li&gt;Added inspections for lombok annotations.&lt;/li&gt;
					&lt;li&gt;Added some simple QuickFixes for lombok inspections.&lt;/li&gt;
					&lt;li&gt;Fixed bug with not working auto-completion in the same source file with lombok annotations that generate methods.&lt;/li&gt;
					&lt;li&gt;Better support of lombok annotations, especially for 'staticName','types' and 'excludes' properties of @Delegate and @XXXConstructor&lt;/li&gt;
					&lt;li&gt;General bug fixing and many improvements&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
			&lt;li&gt;0.1
				&lt;ol&gt;
					&lt;li&gt;Initial Release for IDEA &gt;= 10.0&lt;/li&gt;
				&lt;/ol&gt;
			&lt;/li&gt;
		&lt;/ul&gt;
	
  </change-notes>
</idea-plugin>
