#! /usr/bin/python

import sys, re
from math import floor
from colormath.color_objects import RGBColor

COLOR_START = 24
HUE_GRAIN = 360 / 232
palette = []
args = sys.argv[1:]

if len(args) > 0:
    palette.extend(args)
else:
    for line in sys.stdin:
        color_codes = re.findall('#[0-9A-F]{6}', line, flags=re.IGNORECASE)
        palette.extend(color_codes)

if len(palette) < 1:
    print('no color found', file=sys.stderr)
    sys.exit(1)

for hex_color in palette:
    rgb_color = RGBColor()
    rgb_color.set_from_rgb_hex(hex_color)
    lch_color = rgb_color.convert_to('lchab')
    hue = lch_color.lch_h
    position = floor(hue / HUE_GRAIN)
    approximate_hue = position * HUE_GRAIN
    index = COLOR_START + position
    print('([%f] %f)' % (hue, approximate_hue))
    print('%i' % index)
