if (1) { // migemized_find の履歴に検索履歴 (tabopen/open) を加える {{{
liberator.registerObserver(
'enter',
function () {
let open = commands.get('tabopen'), tabopen = commands.get('tabopen');
 
plugins.libly.$U.around(
plugins.migemized_find.migemized,
'completer',
function (next, [context]) {
context.fork(
'SearchHistory', 0, context,
function (context) {
let cs = [];
let hist = storage['history-command'];
let len = hist.length;
let max = 5;
 
for (let i = len - 1; 0 <= i; i--) {
let it = hist.get(i);
let [, cmd, , args] = commands.parseCommand(it.value);
 
if (!args || !args.length || /^,/.test(args) || /(https?|ftp):/.test(args))
continue;
 
let unquotedArgs = args.replace(/['"]/g, '');
 
if (!unquotedArgs.length)
continue;
if (!(open.hasName(cmd) || tabopen.hasName(cmd)))
continue;
 
cs.push([unquotedArgs, new Date(it.timestamp).toLocaleString()]);
 
max--;
if (max < 0)
break;
}
context.title = ['Search History', 'Timestamp'];
context.compare = void 0;
context.completions = cs;
}
);
 
context.fork(
'MFHistory', 0, context,
function (context) next([context])
);
},
true
);
}
);
 
}//}}}
