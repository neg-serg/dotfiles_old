#!/bin/zsh

summary_="$2" body_="$3" image_="$4" urgency_="$5"

function conv_image_(){ convert -resize 200x "$1" "$2" }
function wf_(){
    echo "${st_}[${cl_}${bold_}$1${cl_}${st_}]${cl_} "
}

function get_pid_(){
    local mpdsc_="$(which mpdscribble) --conf"
    pgrep -f "${mpdsc_} ${XDG_CONFIG_HOME}/mpdscribble/$1.conf --no-daemon"
}

function get_lastfm_(){
    if [[ $(get_pid_ neg) != ""  ]]; then
        builtin printf "$(wf_ "L")Neg last.fm"
    elif [[ $(get_pid_ hextrick) != "" ]]; then
        builtin printf "$(wf_ "L")Hextrick last.fm"
    fi
}

function send_notify_(){ 
    local st_="<span weight='bold' color='#395573'>"
    local cl_="</span>"
    local bold_="<span weight='bold'>"
    local prefix_=$(wf_ "➣")
    declare -a bodyarr_
    local c=1
    while read line; do
        bodyarr_[$c]=${line}
        c=$[c+1]
    done <<< ${body_}
    bodyarr_[1]=$(wf_ '')"${bodyarr_[1]}\n"
    bodyarr_[2]=$(wf_ '')"${bodyarr_[2]}\n"
    bodyarr_[3]=$(wf_ '》')"${bodyarr_[3]}\n"
    local output
    for i in ${bodyarr_[@]}; do
        output="${output}${i}"
    done
    summary_=$(repeat 16 builtin print -n "◇")
    output="\n${output}$(get_lastfm_)\n\n${summary_}"
	
    notify-send -a "prepare_image" -u "${urgency_}" -i "${new_image}" "${summary_}" "${output}"  
}

function compare_images_(){ ~/bin/scripts/compare_images.py "$1" "$2" }

function main(){
    local timeout_=10
    local tiny_timeout=0.2

    local dunst_pics_="/tmp/dunst-images"
    [[ ! -d "${dunst_pics_}" ]] && mkdir -p "${dunst_pics_}"
    local previous_="${dunst_pics_}/prev.png"

    if [[ "${image_}" == "info" ]]; then
        image_="${dunst_pics_}/cover_not.png"
        conv_image_ "${image_}" "${dunst_pics_}/cover_inter.png"
        new_image="${dunst_pics_}/cover_inter.png"
    else
        file_name=$(basename "${image_}")
        file_name=${file_name%.*}
        [[ ! -d "${dunst_pics_}" ]] && mkdir -p "${dunst_pics_}"
        new_image="${dunst_pics_}"/"${file_name}.png"
        conv_image_ "${image_}" "${new_image}"
    fi

    # send notification with compatible image
    if [[ ! -f "${previous_}" ]]; then
        cp -v "${new_image}" "${previous_}"
        send_notify_ 
        sleep ${timeout_} && rm "${new_image}"
        exit 0
    else
        if [[ $(compare_images_ ${new_image} "${previous_}") == "False" ]]; then
            cp -v "${new_image}" "${previous_}"
            send_notify_ 
            sleep ${timeout_} && rm "${new_image}"
        fi
    fi
    find ${dunst_pics_} -name prev.png -not -newermt '-900 seconds' -delete
}

main "$@"
