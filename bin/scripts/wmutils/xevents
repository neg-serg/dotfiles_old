#!/usr/bin/env bash

# KEY_PRESS .......... 2
# KEY_RELEASE ........ 3
# BUTTON_PRESS ....... 4
# BUTTON_RELEASE ..... 5
# MOTION_NOTIFY ...... 6
# ENTER_NOTIFY ....... 7
# LEAVE_NOTIFY ....... 8
# FOCUS_IN ........... 9
# FOCUS_OUT .......... 10
# KEYMAP_NOTIFY ...... 11
# EXPOSE ............. 12
# GRAPHICS_EXPOSURE .. 13
# NO_EXPOSURE ........ 14
# VISIBILITY_NOTIFY .. 15
# CREATE_NOTIFY ...... 16
# DESTROY_NOTIFY ..... 17
# UNMAP_NOTIFY ....... 18
# MAP_NOTIFY ......... 19
# MAP_REQUEST ........ 20
# REPARENT_NOTIFY .... 21
# CONFIGURE_NOTIFY ... 22
# CONFIGURE_REQUEST .. 23
# GRAVITY_NOTIFY ..... 24
# RESIZE_REQUEST ..... 25
# CIRCULATE_NOTIFY ... 26
# CIRCULATE_REQUEST .. 27
# PROPERTY_NOTIFY .... 28
# SELECTION_CLEAR .... 29
# SELECTION_REQUEST .. 30
# SELECTION_NOTIFY ... 31
# COLORMAP_NOTIFY .... 32
# CLIENT_MESSAGE ..... 33
# MAPPING_NOTIFY ..... 34
# GE_GENERIC ......... 35

function main(){
  wew | while IFS=':' read eventID winID; do
    case ${eventID} in
      # window creation: center window on the screen (except docks, menus or similar)
      16)
        local winName=$(xprop -id "${winID}" 'WM_NAME' | cut -d ' ' -f 3)
        local winClass=$(xprop -id "${winID}" WM_CLASS | cut -d ' ' -f 3)

        #notify-send "Testing <${winName}> <${winClass}>"
        
        if [[ "${winName}" != *bar* ]] && [[ "${winClass}" != *dmenu* ]]; then
          bspc node -t floating
          snaw c "${winID}"
          local winW=$(wattr w "${winID}")
          local winH=$(wattr h "${winID}")
          wmp -a $(wattr xy "${winID}") # move the mouse cursor to
          wmp -r "$((winW /2))" "$((winH /2))" # .. its bottom right corner
        fi
      ;;
      #*) echo "${eventID} ${winID} ${winType}";;
    esac
  done
}

main ${@}