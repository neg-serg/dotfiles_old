#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

abort 'iwlist not in PATH' unless system '/bin/sh -c "command -v iwlist >/dev/null"'

buf = %x(iwlist scan 2>/dev/null)
buf.slice! /.*?Cell \d+ - /m

aps = buf.split(/\s+Cell \d+ -/).map do |cell|
  t = { :ie => [], :rates => [] }
  cell.each_line do |line|
    case line
    when /Address:\s*(\S+)/ then t[:mac] = $1
    when /ESSID:"(.*)"/ then t[:essid] = $1
    when /Frequency:(.*)/ then t[:freq] = $1
    when /Quality=(\S+)\s*Signal level=(.* dBm)/ then t[:quality], t[:signal] = $1, $2
    when /Encryption key:(on|off)/ then t[:encryption] = $1 == 'on'
    when /\s*IE: (?!Unknown:)(.*)/ then t[:ie] << $1
    when /(\d+) Mb\/s/ then t[:rates].concat line.scan(/(\d+) Mb\/s/).flatten.map(&:to_i)
    end
  end
  t
end

puts aps.sort_by { |t| [-t[:signal].to_i, t[:essid]] }.map { |t|
  "ESSID: %s\nAddress: %s\nQuality: %s\nSignal: %s\nFrequency: %s\nRates: %s Mb/s\nEncryption: %s%s%s" % [
    t[:essid].inspect,
    t[:mac],
    t[:quality],
    t[:signal],
    t[:freq],
    (t[:rates] || []).sort.join(" "),
    t[:encryption] ? "on" : "OFF",
    ("\n" if t[:ie].any?),
    (t[:ie] || []).map { |l| "  #{l}" }.join("\n")
  ]
}.join("\n\n")
